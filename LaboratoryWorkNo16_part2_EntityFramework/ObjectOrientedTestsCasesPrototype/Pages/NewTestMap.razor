@page "/NewTestMap"
@using ObjectOrientedTestsCasesPrototype.Model
@using ObjectOrientedTestsCasesPrototype.Components

@inject NavigationManager _navigator

<div class="container">
    <div class="row bottom-double-margined">
        <h2>Create new test-case map</h2>
    </div>
    
    <ErrorView Message="Name is required to fill" IsVisible="@_isMessageVisible" />

    <div class="form-group row bottom-margined">
        <label for="mapName" class="col-sm-2 col-form-label">Map Name</label>
        
        <div class="col-sm-10">
            <input type="text" class="form-control" id="mapName" @bind="_testMap.MapName" required>
        </div>
    </div>
    
    <div class="form-group row bottom-margined">
        <label for="mapVersion" class="col-sm-2 col-form-label">Version</label>
        
        <div class="col-sm-10">
            <input type="text" class="form-control" id="mapVersion" readonly="readonly" @bind="_testMap.MapVersion">
        </div>
    </div>
    
    <div class="form-group row bottom-margined">
        <label for="mapComment" class="col-sm-2 col-form-label">Comment</label>
        
        <div class="col-sm-10">
            <textarea type="text" class="form-control" id="mapComment" @bind="_testMap.Comment"></textarea>
        </div>
    </div>
    
    <div class="row bottom-margined">
        <div class="col-sm-2"></div>
        
        <div class="col-sm-10">
            <button class="btn btn-primary" type="submit" @onclick="CreateNewTestCaseMap">Create Map</button>
        </div>
    </div>
</div>

@code {
    private TestMap _testMap = new TestMap() { MapVersion = 1 };
    private bool _isMessageVisible = false;

    private void CreateNewTestCaseMap()
    {
        if (string.IsNullOrWhiteSpace(_testMap.MapName))
        {
            _isMessageVisible = true;
            return;
        }

        OrmManager.Context.TestMaps.Add(_testMap);
        OrmManager.Context.SaveChanges();

        var currentUri = _navigator.Uri.Replace("NewTestMap", string.Empty);
        _navigator.NavigateTo(currentUri);
    }
}