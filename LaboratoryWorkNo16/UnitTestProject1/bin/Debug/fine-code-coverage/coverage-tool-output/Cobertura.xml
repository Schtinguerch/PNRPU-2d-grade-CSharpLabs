<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE coverage SYSTEM "http://cobertura.sourceforge.net/xml/coverage-04.dtd">
<coverage line-rate="0.196411156621806" branch-rate="0.0945409429280397" lines-covered="2014" lines-valid="10254" branches-covered="381" branches-valid="4030" complexity="3810" version="0" timestamp="1698779143">
  <sources />
  <packages>
    <package name="CommunityToolkit.Mvvm" line-rate="0.0208333333333333" branch-rate="0.00992555831265509" complexity="714">
      <classes>
        <class name="CommunityToolkit.Mvvm.ArgumentNullException" filename="/_/src/CommunityToolkit.Mvvm/Properties/Polyfills/ArgumentNullException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ThrowIfNull" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfNull" signature="(T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Collections.Internals.ObservableGroupHelper" filename="/_/src/CommunityToolkit.Mvvm/Collections/Internals/ObservableGroupHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Collections.ObservableGroup`2" filename="/_/src/CommunityToolkit.Mvvm/Collections/ObservableGroup{TKey,TElement}.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Key" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Key" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.get_Key" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.get_Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.IGrouping`2&lt;TKey,TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TKey,System.Collections.Generic.IEnumerable`1&lt;TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetList" signature="(System.Collections.Generic.List`1&lt;TElement&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" filename="/_/src/CommunityToolkit.Mvvm/Collections/ObservableGroupedCollection{TKey,TElement}.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="em.Linq.ILookup&lt;TKey,TElement&gt;.get_Item" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;TKey,TElement&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetList" signature="(System.Collections.Generic.List`1&lt;CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;TKey,TElement&gt;&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Linq.ILookup&lt;TKey,TElement&gt;.Contains" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.Generic.IEnumerable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions" filename="/_/src/CommunityToolkit.Mvvm/Collections/ObservableGroupedCollectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FirstGroupByKey" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FirstGroupByKeyOrDefault" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,System.Linq.IGrouping`2&lt;TKey,TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,System.Collections.Generic.IEnumerable`1&lt;TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,System.Linq.IGrouping`2&lt;TKey,TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,System.Collections.Generic.IEnumerable`1&lt;TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,System.Linq.IGrouping`2&lt;TKey,TElement&gt;,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,System.Collections.Generic.IComparer`1&lt;TKey&gt;,System.Collections.Generic.IEnumerable`1&lt;TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddItem" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,TElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertItem" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,TElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertItem" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TElement&gt;,TKey,System.Collections.Generic.IComparer`1&lt;TKey&gt;,TElement,System.Collections.Generic.IComparer`1&lt;TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveGroup" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TValue&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveItem" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;TKey,TValue&gt;,TKey,TValue,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2" filename="/_/src/CommunityToolkit.Mvvm/Collections/ReadOnlyObservableGroup{TKey,TElement}.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Key" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.get_Key" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.get_Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TKey,System.Collections.ObjectModel.ObservableCollection`1&lt;TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;TKey,TElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroupedCollection`2" filename="/_/src/CommunityToolkit.Mvvm/Collections/ReadOnlyObservableGroupedCollection{TKey,TElement}.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="em.Linq.ILookup&lt;TKey,TElement&gt;.get_Item" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.ObjectModel.ObservableCollection`1&lt;CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;TKey,TElement&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.ObjectModel.ObservableCollection`1&lt;CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2&lt;TKey,TElement&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Linq.ILookup&lt;TKey,TElement&gt;.Contains" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.Generic.IEnumerable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnSourceCollectionChanged" signature="(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FirstGroupByKeyOrDefault" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.__Internals.__ObservableValidatorHelper" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/__Internals/__ObservableValidatorHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ValidateProperty" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableValidator,System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.__Internals.__TaskExtensions" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/__Internals/__TaskExtensions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="GetAwaitableWithoutEndValidation" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAwaiter" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsCompleted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnCompleted" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnsafeOnCompleted" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.INotifyPropertyChangedAttribute" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/Attributes/INotifyPropertyChangedAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IncludeAdditionalHelperMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeAdditionalHelperMethods" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.NotifyCanExecuteChangedForAttribute" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/Attributes/NotifyCanExecuteChangedForAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CommandNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.NotifyPropertyChangedForAttribute" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/Attributes/NotifyPropertyChangedForAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="PropertyNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.ObservableObject" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/ObservableObject.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="OnPropertyChanged" signature="(System.ComponentModel.PropertyChangedEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnPropertyChanging" signature="(System.ComponentModel.PropertyChangingEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnPropertyChanged" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnPropertyChanging" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T&amp;,T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T&amp;,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Action`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Action`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,TModel,System.Action`2&lt;TModel,T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,TModel,System.Action`2&lt;TModel,T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPropertyAndNotifyOnCompletion" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/TaskNotifier&amp;,System.Threading.Tasks.Task,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPropertyAndNotifyOnCompletion" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/TaskNotifier&amp;,System.Threading.Tasks.Task,System.Action`1&lt;System.Threading.Tasks.Task&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPropertyAndNotifyOnCompletion" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/TaskNotifier`1&lt;T&gt;&amp;,System.Threading.Tasks.Task`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPropertyAndNotifyOnCompletion" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/TaskNotifier`1&lt;T&gt;&amp;,System.Threading.Tasks.Task`1&lt;T&gt;,System.Action`1&lt;System.Threading.Tasks.Task`1&lt;T&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPropertyAndNotifyOnCompletion" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/ITaskNotifier`1&lt;TTask&gt;,TTask,System.Action`1&lt;TTask&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.ComponentModel.ObservableObject.ITaskNotifier&lt;System.Threading.Tasks.Task&gt;.get_Task" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.ComponentModel.ObservableObject.ITaskNotifier&lt;System.Threading.Tasks.Task&gt;.set_Task" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/TaskNotifier)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.ComponentModel.ObservableObject.ITaskNotifier&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;.get_Task" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.ComponentModel.ObservableObject.ITaskNotifier&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;.set_Task" signature="(System.Threading.Tasks.Task`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(CommunityToolkit.Mvvm.ComponentModel.ObservableObject/TaskNotifier`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="&gt;c__DisplayClass20_0`1/&lt;&lt;SetPropertyAndNotifyOnCompletion" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/ObservableRecipient.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Messenger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsActive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsActive" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnActivated" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnDeactivated" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Broadcast" signature="(T,T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T&amp;,T,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T&amp;,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Action`1&lt;T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Action`1&lt;T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,TModel,System.Action`2&lt;TModel,T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,TModel,System.Action`2&lt;TModel,T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.ComponentModel.ObservableValidator" filename="/_/src/CommunityToolkit.Mvvm/ComponentModel/ObservableValidator.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="HasErrors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.Object,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IServiceProvider,System.Collections.Generic.IDictionary`2&lt;System.Object,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.ComponentModel.DataAnnotations.ValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T&amp;,T,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T&amp;,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Action`1&lt;T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Action`1&lt;T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,TModel,System.Action`2&lt;TModel,T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,TModel,System.Action`2&lt;TModel,T&gt;,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySetProperty" signature="(T&amp;,T,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySetProperty" signature="(T&amp;,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySetProperty" signature="(T,T,System.Action`1&lt;T&gt;,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.Action`1&lt;T&gt;,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySetProperty" signature="(T,T,TModel,System.Action`2&lt;TModel,T&gt;,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySetProperty" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,TModel,System.Action`2&lt;TModel,T&gt;,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClearErrors" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetErrors" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.ComponentModel.INotifyDataErrorInfo.GetErrors" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAllProperties" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ValidateProperty" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryValidateProperty" signature="(System.Object,System.String,System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClearAllErrors" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="ClearErrorsForProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayNameForProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.DependencyInjection.Ioc" filename="/_/src/CommunityToolkit.Mvvm/DependencyInjection/Ioc.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetService" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetService" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRequiredService" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ConfigureServices" signature="(System.IServiceProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForMissingInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForUnregisteredType" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForRepeatedConfiguration" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.AsyncRelayCommand" filename="/_/src/CommunityToolkit.Mvvm/Input/AsyncRelayCommand.cs" line-rate="1" branch-rate="1" complexity="21">
          <methods>
            <method name="ExecutionTask" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTask" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeCanceled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCancellationRequested" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunning" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.Input.Internals.ICancellationAwareCommand.get_IsCancellationSupported" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,System.Func`1&lt;System.Boolean&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;,System.Func`1&lt;System.Boolean&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotifyCanExecuteChanged" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteAsync" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="&lt;set_ExecutionTask" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
            <method name="AwaitAndThrowIfFailed" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.AsyncRelayCommand`1" filename="/_/src/CommunityToolkit.Mvvm/Input/AsyncRelayCommand{T}.cs" line-rate="1" branch-rate="1" complexity="17">
          <methods>
            <method name="ExecutionTask" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTask" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeCanceled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCancellationRequested" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunning" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="unityToolkit.Mvvm.Input.Internals.ICancellationAwareCommand.get_IsCancellationSupported" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;T,System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;T,System.Threading.Tasks.Task&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`3&lt;T,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`3&lt;T,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;T,System.Threading.Tasks.Task&gt;,System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;T,System.Threading.Tasks.Task&gt;,System.Predicate`1&lt;T&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`3&lt;T,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;,System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`3&lt;T,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;,System.Predicate`1&lt;T&gt;,CommunityToolkit.Mvvm.Input.AsyncRelayCommandOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotifyCanExecuteChanged" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CanExecute" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteAsync" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteAsync" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="&lt;set_ExecutionTask" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.IAsyncRelayCommandExtensions" filename="/_/src/CommunityToolkit.Mvvm/Input/IAsyncRelayCommandExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateCancelCommand" signature="(CommunityToolkit.Mvvm.Input.IAsyncRelayCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.Internals.CancelCommand" filename="/_/src/CommunityToolkit.Mvvm/Input/Internals/CancelCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Input.IAsyncRelayCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnPropertyChanged" signature="(System.Object,System.ComponentModel.PropertyChangedEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.Internals.DisabledCommand" filename="/_/src/CommunityToolkit.Mvvm/Input/Internals/DisabledCommand.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="add_CanExecuteChanged" signature="(System.EventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="remove_CanExecuteChanged" signature="(System.EventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.RelayCommand" filename="/_/src/CommunityToolkit.Mvvm/Input/RelayCommand.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotifyCanExecuteChanged" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.RelayCommand`1" filename="/_/src/CommunityToolkit.Mvvm/Input/RelayCommand{T}.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action`1&lt;T&gt;,System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotifyCanExecuteChanged" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CanExecute" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetCommandArgument" signature="(System.Object,T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowArgumentExceptionForInvalidCommandArgument" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Input.RelayCommandAttribute" filename="/_/src/CommunityToolkit.Mvvm/Input/Attributes/RelayCommandAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanExecute" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanExecute" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowConcurrentExecutions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowConcurrentExecutions" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FlowExceptionsToTaskScheduler" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FlowExceptionsToTaskScheduler" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeCancelCommand" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeCancelCommand" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.IMessengerExtensions" filename="/_/src/CommunityToolkit.Mvvm/Messaging/IMessengerExtensions.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="IsRegistered" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RegisterAll" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RegisterAll" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,CommunityToolkit.Mvvm.Messaging.IRecipient`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,CommunityToolkit.Mvvm.Messaging.IRecipient`1&lt;TMessage&gt;,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.Object,CommunityToolkit.Mvvm.Messaging.MessageHandler`2&lt;System.Object,TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,TRecipient,CommunityToolkit.Mvvm.Messaging.MessageHandler`2&lt;TRecipient,TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.Object,TToken,CommunityToolkit.Mvvm.Messaging.MessageHandler`2&lt;System.Object,TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unregister" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,TMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.IMessengerExtensions" filename="/_/src/CommunityToolkit.Mvvm/Messaging/IMessengerExtensions.Observables.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CreateObservable" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObservable" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subscribe" signature="(System.IObserver`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.IObserver`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Receive" signature="(TMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subscribe" signature="(System.IObserver`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Messaging.IMessenger,System.IObserver`1&lt;TMessage&gt;,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Receive" signature="(TMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Internals.ArrayPoolBufferWriter`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/ArrayPoolBufferWriter{T}.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Span" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResizeBufferAndAdd" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Internals.MessageHandlerDispatcher" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/MessageHandlerDispatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(CommunityToolkit.Mvvm.Messaging.MessageHandler`2&lt;TRecipient,TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Internals.Type2" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/Type2.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(CommunityToolkit.Mvvm.Messaging.Internals.Type2)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Internals.Unit" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/Unit.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Equals" signature="(CommunityToolkit.Mvvm.Messaging.Internals.Unit)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Messages/AsyncCollectionRequestMessage{T}.cs" line-rate="1" branch-rate="1" complexity="28">
          <methods>
            <method name="CancellationToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(System.Threading.Tasks.Task`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(System.Func`2&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAsyncEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="GetResponsesAsync" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Messages.AsyncRequestMessage`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Messages/AsyncRequestMessage{T}.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Response" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReceivedResponse" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReceivedResponse" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(System.Threading.Tasks.Task`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAwaiter" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForNoResponseReceived" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForDuplicateReply" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Messages.CollectionRequestMessage`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Messages/CollectionRequestMessage{T}.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Responses" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Messages.PropertyChangedMessage`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Messages/PropertyChangedMessage{T}.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Sender" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OldValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NewValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.String,T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Messages.RequestMessage`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Messages/RequestMessage{T}.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Response" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReceivedResponse" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReceivedResponse" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reply" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(CommunityToolkit.Mvvm.Messaging.Messages.RequestMessage`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForNoResponseReceived" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForDuplicateReply" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.Messages.ValueChangedMessage`1" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Messages/ValueChangedMessage{T}.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.StrongReferenceMessenger" filename="/_/src/CommunityToolkit.Mvvm/Messaging/StrongReferenceMessenger.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegistered" signature="(System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(TRecipient,TToken,CommunityToolkit.Mvvm.Messaging.MessageHandler`2&lt;TRecipient,TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IRecipient`1&lt;TMessage&gt;,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(System.Object,TToken,CommunityToolkit.Mvvm.Messaging.Internals.MessageHandlerDispatcher)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnregisterAll" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnregisterAll" signature="(System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unregister" signature="(System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(TMessage,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CommunityToolkit.Mvvm.Messaging.IMessenger.Cleanup" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="TryGetMapping" signature="(CommunityToolkit.Mvvm.Messaging.StrongReferenceMessenger/Mapping&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetMapping" signature="(CommunityToolkit.Mvvm.Messaging.StrongReferenceMessenger/Mapping`1&lt;TToken&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAddMapping" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetOrAddMapping" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForDuplicateRegistration" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TypeArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TypeArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(CommunityToolkit.Mvvm.Messaging.StrongReferenceMessenger/Recipient)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommunityToolkit.Mvvm.Messaging.WeakReferenceMessenger" filename="/_/src/CommunityToolkit.Mvvm/Messaging/WeakReferenceMessenger.cs" line-rate="1" branch-rate="1" complexity="20">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="IsRegistered" signature="(System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(TRecipient,TToken,CommunityToolkit.Mvvm.Messaging.MessageHandler`2&lt;TRecipient,TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(CommunityToolkit.Mvvm.Messaging.IRecipient`1&lt;TMessage&gt;,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(System.Object,TToken,CommunityToolkit.Mvvm.Messaging.Internals.MessageHandlerDispatcher)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnregisterAll" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnregisterAll" signature="(System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unregister" signature="(System.Object,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(TMessage,TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendAll" signature="(System.ReadOnlySpan`1&lt;System.Object&gt;,System.Int32,TMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cleanup" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CleanupWithNonBlockingLock" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="CleanupWithoutLock" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
            <method name="ThrowInvalidOperationExceptionForDuplicateRegistration" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Configuration" filename="/_/src/CommunityToolkit.Mvvm/Properties/Configuration.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetConfigurationValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Collections.Generic.Dictionary2`2" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/System/Collections.Generic/Dictionary2.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ContainsKey" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetValue" signature="(TKey,TValue&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryRemove" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAddValueRef" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FindValue" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resize" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetBucket" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowArgumentExceptionForKeyNotFound" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.Dictionary2`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MoveNext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetKey" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetValue" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Collections.Generic.HashHelpers" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/System/Collections.Generic/HashHelpers.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsPrime" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPrime" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpandPrime" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFastModMultiplier" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FastMod" signature="(System.UInt32,System.UInt32,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.MemberNotNullAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Members" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ParameterName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.NotNullWhenAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Url" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Url" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Category" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Scope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Scope" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Target" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Target" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageId" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Justification" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Justification" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Gen2GcCallback" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/System/Gen2GcCallback.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.Action`1&lt;System.Object&gt;,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(System.Action`1&lt;System.Object&gt;,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finalize" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Runtime.CompilerServices.CallerArgumentExpressionAttribute" filename="/_/src/CommunityToolkit.Mvvm/PolySharp.SourceGenerators/PolySharp.SourceGenerators.PolyfillsGenerator/System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.g.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ParameterName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Runtime.CompilerServices.ConditionalWeakTable2`2" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/System/Runtime.CompilerServices/ConditionalWeakTable2{TKey,TValue}.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="TryGetValue" signature="(TKey,TValue&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryAdd" signature="(TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(TKey,System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Remove" signature="(TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.CompilerServices.ConditionalWeakTable2`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MoveNext" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="GetKey" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetValue" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Runtime.CompilerServices.ConditionalWeakTableExtensions" filename="/_/src/CommunityToolkit.Mvvm/Messaging/Internals/System/Runtime.CompilerServices/ConditionalWeakTableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryAdd" signature="(System.Runtime.CompilerServices.ConditionalWeakTable`2&lt;TKey,TValue&gt;,TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="Task 2 DynamicTypeIdentification" line-rate="0.284653465346535" branch-rate="0.235294117647059" complexity="104">
      <classes>
        <class name="Task_2_DynamicTypeIdentification.CompartmentalCar" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\TrainCars\PassengerCars\CompartmentalCar.cs" line-rate="0.80952380952381" branch-rate="0.5" complexity="4">
          <methods>
            <method name="IncludesSoundProofing" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="7" hits="16" branch="false" />
              </lines>
            </method>
            <method name="IncludesSoundProofing" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="7" hits="16" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="6" branch="false" />
                <line number="11" hits="6" branch="false" />
                <line number="12" hits="6" branch="false" />
                <line number="13" hits="6" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="0" complexity="3">
              <lines>
                <line number="16" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="0.6" complexity="NaN">
              <lines>
                <line number="21" hits="2" branch="false" />
                <line number="22" hits="2" branch="false" />
                <line number="23" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="24" hits="1" branch="false" />
                <line number="25" hits="1" branch="false" />
                <line number="28" hits="1" branch="true" condition-coverage="50% (4/8)" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Clone" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="36" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="16" branch="false" />
            <line number="10" hits="6" branch="false" />
            <line number="11" hits="6" branch="false" />
            <line number="12" hits="6" branch="false" />
            <line number="13" hits="6" branch="false" />
            <line number="16" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="21" hits="2" branch="false" />
            <line number="22" hits="2" branch="false" />
            <line number="23" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="24" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="28" hits="1" branch="true" condition-coverage="50% (4/8)" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="2" branch="false" />
            <line number="36" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.EconomClass" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\TrainCars\PassengerCars\EconomClass.cs" line-rate="0.807692307692308" branch-rate="0.571428571428571" complexity="2">
          <methods>
            <method name="LevelCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="11" hits="10" branch="false" />
              </lines>
            </method>
            <method name="LevelCount" signature="(System.Int32)" line-rate="0.8" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="13" hits="14" branch="false" />
                <line number="14" hits="14" branch="true" condition-coverage="50% (2/4)" />
                <line number="15" hits="0" branch="false" />
                <line number="17" hits="14" branch="false" />
                <line number="18" hits="14" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="13" branch="false" />
                <line number="23" hits="13" branch="false" />
                <line number="24" hits="13" branch="false" />
                <line number="25" hits="13" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="0.6" complexity="NaN">
              <lines>
                <line number="33" hits="3" branch="false" />
                <line number="34" hits="3" branch="false" />
                <line number="35" hits="3" branch="true" condition-coverage="100% (2/2)" />
                <line number="36" hits="2" branch="false" />
                <line number="37" hits="2" branch="false" />
                <line number="40" hits="1" branch="true" condition-coverage="50% (4/8)" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="3" branch="false" />
              </lines>
            </method>
            <method name="Clone" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="48" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="10" branch="false" />
            <line number="13" hits="14" branch="false" />
            <line number="14" hits="14" branch="true" condition-coverage="50% (2/4)" />
            <line number="15" hits="0" branch="false" />
            <line number="17" hits="14" branch="false" />
            <line number="18" hits="14" branch="false" />
            <line number="22" hits="13" branch="false" />
            <line number="23" hits="13" branch="false" />
            <line number="24" hits="13" branch="false" />
            <line number="25" hits="13" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="33" hits="3" branch="false" />
            <line number="34" hits="3" branch="false" />
            <line number="35" hits="3" branch="true" condition-coverage="100% (2/2)" />
            <line number="36" hits="2" branch="false" />
            <line number="37" hits="2" branch="false" />
            <line number="40" hits="1" branch="true" condition-coverage="50% (4/8)" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="3" branch="false" />
            <line number="48" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.Express" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\Express.cs" line-rate="0" branch-rate="0" complexity="6">
          <methods>
            <method name="Name" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="8" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Name" signature="(System.String)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="8" hits="0" branch="false" />
              </lines>
            </method>
            <method name="AbleToUsing" signature="()" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="16" hits="0" branch="false" />
                <line number="18" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="19" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
                <line number="22" hits="0" branch="false" />
                <line number="23" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="26" hits="0" branch="false" />
                <line number="29" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="30" hits="0" branch="false" />
                <line number="31" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="35" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="36" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
                <line number="38" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
                <line number="45" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PassengerCount" signature="()" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="53" hits="0" branch="false" />
                <line number="55" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="58" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="59" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Cars" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="65" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Cars" signature="(System.Collections.Generic.List`1&lt;Task_2_DynamicTypeIdentification.TrainCar&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="65" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.List`1&lt;Task_2_DynamicTypeIdentification.TrainCar&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="67" hits="0" branch="false" />
                <line number="68" hits="0" branch="false" />
                <line number="69" hits="0" branch="false" />
                <line number="70" hits="0" branch="false" />
                <line number="71" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="0" complexity="6">
              <lines>
                <line number="74" hits="0" branch="false" />
                <line number="75" hits="0" branch="false" />
                <line number="76" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="78" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="79" hits="0" branch="false" />
                <line number="80" hits="0" branch="false" />
                <line number="81" hits="0" branch="false" />
                <line number="84" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="87" hits="0" branch="false" />
                <line number="88" hits="0" branch="false" />
                <line number="89" hits="0" branch="false" />
                <line number="91" hits="0" branch="false" />
                <line number="92" hits="0" branch="false" />
                <line number="93" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="8" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="18" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="19" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="22" hits="0" branch="false" />
            <line number="23" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="26" hits="0" branch="false" />
            <line number="29" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="30" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="35" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="36" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="38" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="45" hits="0" branch="false" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="53" hits="0" branch="false" />
            <line number="55" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="58" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="59" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="65" hits="0" branch="false" />
            <line number="67" hits="0" branch="false" />
            <line number="68" hits="0" branch="false" />
            <line number="69" hits="0" branch="false" />
            <line number="70" hits="0" branch="false" />
            <line number="71" hits="0" branch="false" />
            <line number="74" hits="0" branch="false" />
            <line number="75" hits="0" branch="false" />
            <line number="76" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="78" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="79" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="81" hits="0" branch="false" />
            <line number="84" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="87" hits="0" branch="false" />
            <line number="88" hits="0" branch="false" />
            <line number="89" hits="0" branch="false" />
            <line number="91" hits="0" branch="false" />
            <line number="92" hits="0" branch="false" />
            <line number="93" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.KitchenCar" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\TrainCars\ServiceCars\KitchenCar.cs" line-rate="0.576923076923077" branch-rate="0.4" complexity="6">
          <methods>
            <method name="DishAssortiment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="20" branch="false" />
              </lines>
            </method>
            <method name="DishAssortiment" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="20" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="12" hits="9" branch="false" />
                <line number="13" hits="9" branch="false" />
                <line number="14" hits="9" branch="false" />
                <line number="15" hits="9" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="18" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DishAssortimentString" signature="()" line-rate="0" branch-rate="0" complexity="4">
              <lines>
                <line number="21" hits="0" branch="false" />
                <line number="22" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="23" hits="0" branch="false" />
                <line number="24" hits="0" branch="false" />
                <line number="27" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="33" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="0.666666666666667" complexity="NaN">
              <lines>
                <line number="36" hits="3" branch="false" />
                <line number="37" hits="3" branch="false" />
                <line number="38" hits="3" branch="true" condition-coverage="100% (2/2)" />
                <line number="39" hits="2" branch="false" />
                <line number="40" hits="2" branch="false" />
                <line number="43" hits="1" branch="true" condition-coverage="50% (2/4)" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="3" branch="false" />
              </lines>
            </method>
            <method name="Clone" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="49" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="20" branch="false" />
            <line number="12" hits="9" branch="false" />
            <line number="13" hits="9" branch="false" />
            <line number="14" hits="9" branch="false" />
            <line number="15" hits="9" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="22" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="23" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="27" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="36" hits="3" branch="false" />
            <line number="37" hits="3" branch="false" />
            <line number="38" hits="3" branch="true" condition-coverage="100% (2/2)" />
            <line number="39" hits="2" branch="false" />
            <line number="40" hits="2" branch="false" />
            <line number="43" hits="1" branch="true" condition-coverage="50% (2/4)" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="3" branch="false" />
            <line number="49" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.Locomotive" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\TrainCars\ServiceCars\Locomotive.cs" line-rate="0.774193548387097" branch-rate="0.5" complexity="2">
          <methods>
            <method name="EnginePower" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="12" hits="10" branch="false" />
              </lines>
            </method>
            <method name="EnginePower" signature="(System.Int32)" line-rate="0.8" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="14" hits="12" branch="false" />
                <line number="15" hits="12" branch="true" condition-coverage="50% (1/2)" />
                <line number="16" hits="0" branch="false" />
                <line number="18" hits="12" branch="false" />
                <line number="19" hits="12" branch="false" />
              </lines>
            </method>
            <method name="MaxSpeed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="10" branch="false" />
              </lines>
            </method>
            <method name="MaxSpeed" signature="(System.Int32)" line-rate="0.8" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="26" hits="12" branch="false" />
                <line number="27" hits="12" branch="true" condition-coverage="50% (1/2)" />
                <line number="28" hits="0" branch="false" />
                <line number="30" hits="12" branch="false" />
                <line number="31" hits="12" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="35" hits="11" branch="false" />
                <line number="36" hits="11" branch="false" />
                <line number="37" hits="11" branch="false" />
                <line number="38" hits="11" branch="false" />
                <line number="39" hits="11" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="0.818181818181818" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
                <line number="53" hits="1" branch="true" condition-coverage="50% (3/6)" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
                <line number="57" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Clone" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="60" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="10" branch="false" />
            <line number="14" hits="12" branch="false" />
            <line number="15" hits="12" branch="true" condition-coverage="50% (1/2)" />
            <line number="16" hits="0" branch="false" />
            <line number="18" hits="12" branch="false" />
            <line number="19" hits="12" branch="false" />
            <line number="24" hits="10" branch="false" />
            <line number="26" hits="12" branch="false" />
            <line number="27" hits="12" branch="true" condition-coverage="50% (1/2)" />
            <line number="28" hits="0" branch="false" />
            <line number="30" hits="12" branch="false" />
            <line number="31" hits="12" branch="false" />
            <line number="35" hits="11" branch="false" />
            <line number="36" hits="11" branch="false" />
            <line number="37" hits="11" branch="false" />
            <line number="38" hits="11" branch="false" />
            <line number="39" hits="11" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="53" hits="1" branch="true" condition-coverage="50% (3/6)" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="57" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="60" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.PassengerCar" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\TrainCars\PassengerCars\PassengerCar.cs" line-rate="0.414634146341463" branch-rate="0.125" complexity="5">
          <methods>
            <method name="Passengers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="11" hits="21" branch="false" />
              </lines>
            </method>
            <method name="PassengerCapacity" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="15" hits="13" branch="false" />
              </lines>
            </method>
            <method name="PassengerCapacity" signature="(System.Int32)" line-rate="0.8" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="17" hits="20" branch="false" />
                <line number="18" hits="20" branch="true" condition-coverage="50% (1/2)" />
                <line number="19" hits="0" branch="false" />
                <line number="21" hits="20" branch="false" />
                <line number="22" hits="20" branch="false" />
              </lines>
            </method>
            <method name="PassengerCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="7" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="27" hits="19" branch="false" />
                <line number="28" hits="19" branch="false" />
                <line number="29" hits="19" branch="false" />
                <line number="30" hits="19" branch="false" />
                <line number="31" hits="19" branch="false" />
              </lines>
            </method>
            <method name="AddPassengers" signature="(System.String[])" line-rate="0.833333333333333" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="36" hits="0" branch="false" />
                <line number="38" hits="7" branch="false" />
                <line number="39" hits="2" branch="false" />
                <line number="40" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PassengersString" signature="()" line-rate="0" branch-rate="0" complexity="4">
              <lines>
                <line number="47" hits="0" branch="false" />
                <line number="48" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
                <line number="53" hits="0" branch="false" />
                <line number="55" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="58" hits="0" branch="false" />
                <line number="59" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="62" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
                <line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="65" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="69" hits="0" branch="true" condition-coverage="0% (0/6)" />
                <line number="70" hits="0" branch="false" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
                <line number="73" hits="0" branch="false" />
                <line number="74" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="21" branch="false" />
            <line number="15" hits="13" branch="false" />
            <line number="17" hits="20" branch="false" />
            <line number="18" hits="20" branch="true" condition-coverage="50% (1/2)" />
            <line number="19" hits="0" branch="false" />
            <line number="21" hits="20" branch="false" />
            <line number="22" hits="20" branch="false" />
            <line number="25" hits="7" branch="false" />
            <line number="27" hits="19" branch="false" />
            <line number="28" hits="19" branch="false" />
            <line number="29" hits="19" branch="false" />
            <line number="30" hits="19" branch="false" />
            <line number="31" hits="19" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="36" hits="0" branch="false" />
            <line number="38" hits="7" branch="false" />
            <line number="39" hits="2" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="48" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="53" hits="0" branch="false" />
            <line number="55" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="58" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="65" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="69" hits="0" branch="true" condition-coverage="0% (0/6)" />
            <line number="70" hits="0" branch="false" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="73" hits="0" branch="false" />
            <line number="74" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.Program" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\Program.cs" line-rate="0" branch-rate="1" complexity="6">
          <methods>
            <method name="Main" signature="(System.String[])" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="57" hits="0" branch="false" />
                <line number="58" hits="0" branch="false" />
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
                <line number="65" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="67" hits="0" branch="false" />
                <line number="68" hits="0" branch="false" />
                <line number="69" hits="0" branch="false" />
                <line number="70" hits="0" branch="false" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
                <line number="73" hits="0" branch="false" />
                <line number="74" hits="0" branch="false" />
                <line number="75" hits="0" branch="false" />
                <line number="76" hits="0" branch="false" />
                <line number="77" hits="0" branch="false" />
                <line number="78" hits="0" branch="false" />
                <line number="79" hits="0" branch="false" />
                <line number="80" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ChoosenTypeIndex" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="83" hits="0" branch="false" />
                <line number="84" hits="0" branch="false" />
                <line number="85" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="88" hits="0" branch="false" />
                <line number="89" hits="0" branch="false" />
                <line number="90" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PrintAllCars" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="94" hits="0" branch="false" />
                <line number="95" hits="0" branch="false" />
                <line number="96" hits="0" branch="false" />
                <line number="97" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PerformFirstRequest" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="101" hits="0" branch="false" />
                <line number="102" hits="0" branch="false" />
                <line number="103" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="106" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PerformSecondRequest" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="109" hits="0" branch="false" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="113" hits="0" branch="false" />
                <line number="114" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PerformThirdRequest" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="117" hits="0" branch="false" />
                <line number="118" hits="0" branch="false" />
                <line number="119" hits="0" branch="false" />
                <line number="121" hits="0" branch="false" />
                <line number="122" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".cctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="12" hits="0" branch="false" />
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
                <line number="22" hits="0" branch="false" />
                <line number="23" hits="0" branch="false" />
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="26" hits="0" branch="false" />
                <line number="27" hits="0" branch="false" />
                <line number="28" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="false" />
                <line number="31" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="33" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="35" hits="0" branch="false" />
                <line number="36" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
                <line number="38" hits="0" branch="false" />
                <line number="39" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
                <line number="41" hits="0" branch="false" />
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
                <line number="45" hits="0" branch="false" />
                <line number="46" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
                <line number="48" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="53" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="22" hits="0" branch="false" />
            <line number="23" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="26" hits="0" branch="false" />
            <line number="27" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="35" hits="0" branch="false" />
            <line number="36" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="38" hits="0" branch="false" />
            <line number="39" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="41" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="45" hits="0" branch="false" />
            <line number="46" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="48" hits="0" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="53" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="58" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="65" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="67" hits="0" branch="false" />
            <line number="68" hits="0" branch="false" />
            <line number="69" hits="0" branch="false" />
            <line number="70" hits="0" branch="false" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="73" hits="0" branch="false" />
            <line number="74" hits="0" branch="false" />
            <line number="75" hits="0" branch="false" />
            <line number="76" hits="0" branch="false" />
            <line number="77" hits="0" branch="false" />
            <line number="78" hits="0" branch="false" />
            <line number="79" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="83" hits="0" branch="false" />
            <line number="84" hits="0" branch="false" />
            <line number="85" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="88" hits="0" branch="false" />
            <line number="89" hits="0" branch="false" />
            <line number="90" hits="0" branch="false" />
            <line number="94" hits="0" branch="false" />
            <line number="95" hits="0" branch="false" />
            <line number="96" hits="0" branch="false" />
            <line number="97" hits="0" branch="false" />
            <line number="101" hits="0" branch="false" />
            <line number="102" hits="0" branch="false" />
            <line number="103" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="106" hits="0" branch="false" />
            <line number="109" hits="0" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="113" hits="0" branch="false" />
            <line number="114" hits="0" branch="false" />
            <line number="117" hits="0" branch="false" />
            <line number="118" hits="0" branch="false" />
            <line number="119" hits="0" branch="false" />
            <line number="121" hits="0" branch="false" />
            <line number="122" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.Request" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\Request.cs" line-rate="0" branch-rate="0" complexity="3">
          <methods>
            <method name="ChooseCarType" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ChooseCarType" signature="(System.Collections.Generic.List`1&lt;System.Type&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="0" branch="false" />
              </lines>
            </method>
            <method name="CarTypeListToString" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="33" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="36" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="37" hits="0" branch="false" />
                <line number="39" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetCountOfPassengers" signature="(Task_2_DynamicTypeIdentification.Express,System.Int32)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="45" hits="0" branch="false" />
                <line number="46" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="47" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
                <line number="52" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="53" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
                <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="56" hits="0" branch="false" />
                <line number="59" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="64" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="68" hits="0" branch="false" />
                <line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
                <line number="73" hits="0" branch="false" />
                <line number="75" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="76" hits="0" branch="false" />
                <line number="77" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetCarCount" signature="(Task_2_DynamicTypeIdentification.Express,System.Int32)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="80" hits="0" branch="false" />
                <line number="81" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="82" hits="0" branch="false" />
                <line number="83" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="84" hits="0" branch="false" />
                <line number="87" hits="0" branch="false" />
                <line number="88" hits="0" branch="false" />
                <line number="90" hits="0" branch="false" />
                <line number="91" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="92" hits="0" branch="false" />
                <line number="94" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="95" hits="0" branch="false" />
                <line number="96" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetPowerMassCoefficient" signature="(Task_2_DynamicTypeIdentification.Express)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="99" hits="0" branch="false" />
                <line number="100" hits="0" branch="false" />
                <line number="101" hits="0" branch="false" />
                <line number="103" hits="0" branch="false" />
                <line number="104" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="108" hits="0" branch="false" />
                <line number="109" hits="0" branch="false" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="113" hits="0" branch="false" />
                <line number="114" hits="0" branch="false" />
                <line number="115" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".cctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="12" hits="0" branch="false" />
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
                <line number="22" hits="0" branch="false" />
                <line number="23" hits="0" branch="false" />
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="26" hits="0" branch="false" />
                <line number="27" hits="0" branch="false" />
                <line number="28" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="22" hits="0" branch="false" />
            <line number="23" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="26" hits="0" branch="false" />
            <line number="27" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="36" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="37" hits="0" branch="false" />
            <line number="39" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="45" hits="0" branch="false" />
            <line number="46" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="47" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="52" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="53" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="56" hits="0" branch="false" />
            <line number="59" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="64" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="68" hits="0" branch="false" />
            <line number="70" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="73" hits="0" branch="false" />
            <line number="75" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="76" hits="0" branch="false" />
            <line number="77" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="81" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="82" hits="0" branch="false" />
            <line number="83" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="84" hits="0" branch="false" />
            <line number="87" hits="0" branch="false" />
            <line number="88" hits="0" branch="false" />
            <line number="90" hits="0" branch="false" />
            <line number="91" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="92" hits="0" branch="false" />
            <line number="94" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="95" hits="0" branch="false" />
            <line number="96" hits="0" branch="false" />
            <line number="99" hits="0" branch="false" />
            <line number="100" hits="0" branch="false" />
            <line number="101" hits="0" branch="false" />
            <line number="103" hits="0" branch="false" />
            <line number="104" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="108" hits="0" branch="false" />
            <line number="109" hits="0" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="113" hits="0" branch="false" />
            <line number="114" hits="0" branch="false" />
            <line number="115" hits="0" branch="false" />
          </lines>
        </class>
        <class name="Task_2_DynamicTypeIdentification.TrainCar" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryworkNo10\Task 2 DynamicTypeIdentification\TrainCars\TrainCar.cs" line-rate="0.6" branch-rate="0.375" complexity="3">
          <methods>
            <method name="Mass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="12" hits="72" branch="false" />
              </lines>
            </method>
            <method name="Mass" signature="(System.Int32)" line-rate="0.8" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="14" hits="40" branch="false" />
                <line number="15" hits="40" branch="true" condition-coverage="50% (1/2)" />
                <line number="16" hits="0" branch="false" />
                <line number="18" hits="40" branch="false" />
                <line number="19" hits="40" branch="false" />
              </lines>
            </method>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="46" branch="false" />
              </lines>
            </method>
            <method name="Length" signature="(System.Int32)" line-rate="0.8" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="26" hits="40" branch="false" />
                <line number="27" hits="40" branch="true" condition-coverage="50% (1/2)" />
                <line number="28" hits="0" branch="false" />
                <line number="30" hits="40" branch="false" />
                <line number="31" hits="40" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="34" hits="39" branch="false" />
                <line number="35" hits="39" branch="false" />
                <line number="36" hits="39" branch="false" />
                <line number="37" hits="39" branch="false" />
                <line number="38" hits="39" branch="false" />
              </lines>
            </method>
            <method name="BaseCar" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="41" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="44" hits="0" branch="false" />
              </lines>
            </method>
            <method name="CompareTo" signature="(System.Object)" line-rate="0.75" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="47" hits="13" branch="false" />
                <line number="48" hits="13" branch="false" />
                <line number="50" hits="13" branch="true" condition-coverage="50% (2/4)" />
                <line number="51" hits="0" branch="false" />
                <line number="53" hits="13" branch="true" condition-coverage="50% (2/4)" />
                <line number="54" hits="13" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="13" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="63" hits="0" branch="false" />
                <line number="64" hits="0" branch="false" />
                <line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="68" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Clone" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="70" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="72" branch="false" />
            <line number="14" hits="40" branch="false" />
            <line number="15" hits="40" branch="true" condition-coverage="50% (1/2)" />
            <line number="16" hits="0" branch="false" />
            <line number="18" hits="40" branch="false" />
            <line number="19" hits="40" branch="false" />
            <line number="24" hits="46" branch="false" />
            <line number="26" hits="40" branch="false" />
            <line number="27" hits="40" branch="true" condition-coverage="50% (1/2)" />
            <line number="28" hits="0" branch="false" />
            <line number="30" hits="40" branch="false" />
            <line number="31" hits="40" branch="false" />
            <line number="34" hits="39" branch="false" />
            <line number="35" hits="39" branch="false" />
            <line number="36" hits="39" branch="false" />
            <line number="37" hits="39" branch="false" />
            <line number="38" hits="39" branch="false" />
            <line number="41" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="47" hits="13" branch="false" />
            <line number="48" hits="13" branch="false" />
            <line number="50" hits="13" branch="true" condition-coverage="50% (2/4)" />
            <line number="51" hits="0" branch="false" />
            <line number="53" hits="13" branch="true" condition-coverage="50% (2/4)" />
            <line number="54" hits="13" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="13" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="63" hits="0" branch="false" />
            <line number="64" hits="0" branch="false" />
            <line number="67" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="68" hits="0" branch="false" />
            <line number="70" hits="0" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="UKit" line-rate="0" branch-rate="0" complexity="53">
      <classes>
        <class name="UKit.Console.ConsoleMenu" filename="C:\Users\2sust\source\repos\OOP_LABS\UKit\UKit\Console\ConsoleMenu.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Actions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Actions" signature="(UKit.Console.Pair`2&lt;UKit.Console.Action,System.String&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CloseCode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CloseCode" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppExitCode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppExitCode" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitForKey" signature="(System.ConsoleKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(UKit.Console.Pair`2&lt;UKit.Console.Action,System.String&gt;[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShowMenu" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ClearAndChooseAction" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="InvokeAction" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="UKit.Console.InputCondition`1" filename="C:\Users\2sust\source\repos\OOP_LABS\UKit\UKit\Console\InputCondition.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CommentMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CommentMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSuit" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSuit" signature="(UKit.Console.Condition`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="UKit.Console.Pair`2" filename="C:\Users\2sust\source\repos\OOP_LABS\UKit\UKit\Console\Pair.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="First" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="First" signature="(T1)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Second" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Second" signature="(T2)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(T1,T2)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="UKit.Console.UConsole" filename="C:\Users\2sust\source\repos\OOP_LABS\UKit\UKit\Console\UConsole.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="SetCursorOnTop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ScrollUp" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReadInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadInt" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadInt" signature="(System.String,UKit.Console.InputCondition`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadDouble" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadDouble" signature="(System.String,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadBool" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="UnitTestProject1" line-rate="0.986870897155361" branch-rate="0.75" complexity="62">
      <classes>
        <class name="UnitTestProject1.CarNotSelectedDialogMock" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\TestPool.cs" line-rate="0.75" branch-rate="1" complexity="1">
          <methods>
            <method name="SelectedCar" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="136" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelectedCar" signature="(Task_2_DynamicTypeIdentification.TrainCar)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="136" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ShowDialog" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="139" hits="1" branch="false" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="136" hits="0" branch="false" />
            <line number="139" hits="1" branch="false" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.CarSelectedDialogMock" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\TestPool.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="SelectedCar" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="121" hits="2" branch="false" />
              </lines>
            </method>
            <method name="SelectedCar" signature="(Task_2_DynamicTypeIdentification.TrainCar)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="121" hits="2" branch="false" />
              </lines>
            </method>
            <method name="ShowDialog" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="128" hits="1" branch="false" />
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="121" hits="2" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.DeepObservableCollectionTests" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\DeepObservableCollectionTests.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="Initialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="15" hits="1" branch="false" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
              </lines>
            </method>
            <method name="EmptyList" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="24" hits="1" branch="false" />
                <line number="25" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
              </lines>
            </method>
            <method name="InitializeByEmptyList" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
              </lines>
            </method>
            <method name="AddElement" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
              </lines>
            </method>
            <method name="InsertElement" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
              </lines>
            </method>
            <method name="RemoveElementByIndex" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
              </lines>
            </method>
            <method name="InitializeByObservables" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
              </lines>
            </method>
            <method name="RemoveObservables" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ChangeSimpleValue" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="104" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
                <line number="110" hits="1" branch="false" />
                <line number="111" hits="1" branch="false" />
                <line number="113" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ChangeObservableValue" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="123" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ChangePropertyOfObservable" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
                <line number="133" hits="1" branch="false" />
                <line number="135" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
              </lines>
            </method>
            <method name="EmptyObservableString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="141" hits="1" branch="false" />
                <line number="142" hits="1" branch="false" />
                <line number="143" hits="1" branch="false" />
                <line number="144" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="15" hits="1" branch="false" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="110" hits="1" branch="false" />
            <line number="111" hits="1" branch="false" />
            <line number="113" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="123" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="133" hits="1" branch="false" />
            <line number="135" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
            <line number="142" hits="1" branch="false" />
            <line number="143" hits="1" branch="false" />
            <line number="144" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.ListWrapperTests" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\ListWrapperTests.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="CheckSequence" signature="(System.Collections.Generic.List`1&lt;System.String&gt;,WpfFileWorking.ViewModels.ListWrapper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="14" hits="5" branch="false" />
                <line number="15" hits="35" branch="true" condition-coverage="100% (2/2)" />
                <line number="16" hits="5" branch="false" />
              </lines>
            </method>
            <method name="Initialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
                <line number="25" hits="1" branch="false" />
              </lines>
            </method>
            <method name="AddItem" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
              </lines>
            </method>
            <method name="RemoveItem" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ChangeWholeObservable" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ChangePropertyOfObservable" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="64" hits="1" branch="false" />
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="5" branch="false" />
            <line number="15" hits="35" branch="true" condition-coverage="100% (2/2)" />
            <line number="16" hits="5" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.ObservableCarTests" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\ObservableCarTests.cs" line-rate="1" branch-rate="0.5" complexity="7">
          <methods>
            <method name="TrainCarBaseInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
                <line number="23" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TrainCarBaseChanging" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="27" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
              </lines>
            </method>
            <method name="PassengerCarBaseInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
              </lines>
            </method>
            <method name="PassengerCarBaseSetup" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="57" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
              </lines>
            </method>
            <method name="AddPassengerCommand" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
              </lines>
            </method>
            <method name="RemovePassengerCommand" signature="()" line-rate="1" branch-rate="0.5" complexity="2">
              <lines>
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="94" hits="3" branch="true" condition-coverage="50% (1/2)" />
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="23" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="57" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="94" hits="3" branch="true" condition-coverage="50% (1/2)" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.ServiceTests" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\UnitTest1.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name="CarSelected" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="23" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
                <line number="25" hits="1" branch="false" />
              </lines>
            </method>
            <method name="CarNotSelected" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
              </lines>
            </method>
            <method name="NotValidInteger" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="44" hits="11" branch="false" />
                <line number="45" hits="4" branch="false" />
                <line number="46" hits="4" branch="false" />
                <line number="47" hits="4" branch="false" />
                <line number="48" hits="4" branch="false" />
                <line number="49" hits="1" branch="false" />
              </lines>
            </method>
            <method name="NotNaturalNumber" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
                <line number="58" hits="9" branch="false" />
                <line number="59" hits="3" branch="false" />
                <line number="60" hits="3" branch="false" />
                <line number="61" hits="3" branch="false" />
                <line number="62" hits="3" branch="false" />
                <line number="63" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ValidInteger" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="72" hits="9" branch="false" />
                <line number="73" hits="3" branch="false" />
                <line number="74" hits="3" branch="false" />
                <line number="75" hits="3" branch="false" />
                <line number="76" hits="3" branch="false" />
                <line number="77" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Serialization" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="16" branch="true" condition-coverage="100% (2/2)" />
                <line number="91" hits="7" branch="false" />
                <line number="92" hits="7" branch="false" />
                <line number="93" hits="7" branch="false" />
                <line number="94" hits="1" branch="false" />
              </lines>
            </method>
            <method name="LocomotiveToViewModel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
                <line number="103" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
                <line number="106" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="23" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="44" hits="11" branch="false" />
            <line number="45" hits="4" branch="false" />
            <line number="46" hits="4" branch="false" />
            <line number="47" hits="4" branch="false" />
            <line number="48" hits="4" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="58" hits="9" branch="false" />
            <line number="59" hits="3" branch="false" />
            <line number="60" hits="3" branch="false" />
            <line number="61" hits="3" branch="false" />
            <line number="62" hits="3" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="72" hits="9" branch="false" />
            <line number="73" hits="3" branch="false" />
            <line number="74" hits="3" branch="false" />
            <line number="75" hits="3" branch="false" />
            <line number="76" hits="3" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="16" branch="true" condition-coverage="100% (2/2)" />
            <line number="91" hits="7" branch="false" />
            <line number="92" hits="7" branch="false" />
            <line number="93" hits="7" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.TestPool" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\TestPool.cs" line-rate="0.946808510638298" branch-rate="0.666666666666667" complexity="1">
          <methods>
            <method name="StandardList" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="14" hits="14" branch="false" />
                <line number="15" hits="14" branch="false" />
                <line number="16" hits="14" branch="false" />
                <line number="17" hits="14" branch="false" />
                <line number="18" hits="14" branch="false" />
                <line number="19" hits="14" branch="false" />
                <line number="20" hits="14" branch="false" />
                <line number="21" hits="14" branch="false" />
                <line number="22" hits="14" branch="false" />
              </lines>
            </method>
            <method name="DeepObservableList" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="4" branch="false" />
              </lines>
            </method>
            <method name="DeepObservableOfObservables" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="27" hits="3" branch="false" />
                <line number="28" hits="3" branch="false" />
                <line number="29" hits="3" branch="false" />
                <line number="30" hits="3" branch="false" />
                <line number="31" hits="3" branch="false" />
                <line number="32" hits="3" branch="false" />
                <line number="33" hits="3" branch="false" />
                <line number="34" hits="3" branch="false" />
                <line number="35" hits="3" branch="false" />
              </lines>
            </method>
            <method name="AreSameSequence" signature="(System.Collections.Generic.List`1&lt;System.String&gt;,WpfFileWorking.ViewModels.DeepObservableCollection`1&lt;WpfFileWorking.ViewModels.ObservableString&gt;)" line-rate="0.642857142857143" branch-rate="0.666666666666667" complexity="NaN">
              <lines>
                <line number="100" hits="3" branch="false" />
                <line number="101" hits="3" branch="true" condition-coverage="50% (1/2)" />
                <line number="102" hits="0" branch="false" />
                <line number="103" hits="0" branch="false" />
                <line number="106" hits="3" branch="false" />
                <line number="107" hits="20" branch="true" condition-coverage="100% (2/2)" />
                <line number="108" hits="7" branch="false" />
                <line number="109" hits="7" branch="true" condition-coverage="50% (1/2)" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="112" hits="0" branch="false" />
                <line number="113" hits="7" branch="false" />
                <line number="115" hits="3" branch="false" />
                <line number="116" hits="3" branch="false" />
              </lines>
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
                <line number="57" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="14" branch="false" />
            <line number="15" hits="14" branch="false" />
            <line number="16" hits="14" branch="false" />
            <line number="17" hits="14" branch="false" />
            <line number="18" hits="14" branch="false" />
            <line number="19" hits="14" branch="false" />
            <line number="20" hits="14" branch="false" />
            <line number="21" hits="14" branch="false" />
            <line number="22" hits="14" branch="false" />
            <line number="24" hits="4" branch="false" />
            <line number="27" hits="3" branch="false" />
            <line number="28" hits="3" branch="false" />
            <line number="29" hits="3" branch="false" />
            <line number="30" hits="3" branch="false" />
            <line number="31" hits="3" branch="false" />
            <line number="32" hits="3" branch="false" />
            <line number="33" hits="3" branch="false" />
            <line number="34" hits="3" branch="false" />
            <line number="35" hits="3" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="57" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="100" hits="3" branch="false" />
            <line number="101" hits="3" branch="true" condition-coverage="50% (1/2)" />
            <line number="102" hits="0" branch="false" />
            <line number="103" hits="0" branch="false" />
            <line number="106" hits="3" branch="false" />
            <line number="107" hits="20" branch="true" condition-coverage="100% (2/2)" />
            <line number="108" hits="7" branch="false" />
            <line number="109" hits="7" branch="true" condition-coverage="50% (1/2)" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="112" hits="0" branch="false" />
            <line number="113" hits="7" branch="false" />
            <line number="115" hits="3" branch="false" />
            <line number="116" hits="3" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.TrainCarViewModelConverterTests" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\TrainCarViewModelConverterTests.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="WrapEconomClass" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="23" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
                <line number="25" hits="1" branch="false" />
              </lines>
            </method>
            <method name="WrapCompartmentalCar" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
              </lines>
            </method>
            <method name="WrapLocomotive" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
              </lines>
            </method>
            <method name="WrapKitchen" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="57" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ConvertIncorrect" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ConvertNull" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="75" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ConvertBack" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ConvertWithException" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="2" branch="false" />
                <line number="100" hits="2" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="23" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="57" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="2" branch="false" />
            <line number="100" hits="2" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
          </lines>
        </class>
        <class name="UnitTestProject1.TrainCarViewModelTests" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\UnitTestProject1\TrainCarViewModelTests.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="LocomotiveInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
              </lines>
            </method>
            <method name="LocomotiveFields" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
              </lines>
            </method>
            <method name="KitchenCarInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
              </lines>
            </method>
            <method name="KitchenCarFields" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
              </lines>
            </method>
            <method name="KitchenCarCommands" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
              </lines>
            </method>
            <method name="EconomClassInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
              </lines>
            </method>
            <method name="EconomClassFields" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="103" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="106" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
              </lines>
            </method>
            <method name="CompartmentalCarInitialization" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="112" hits="1" branch="false" />
                <line number="113" hits="1" branch="false" />
                <line number="114" hits="1" branch="false" />
                <line number="116" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
              </lines>
            </method>
            <method name="CompartmentalCarFields" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="121" hits="1" branch="false" />
                <line number="122" hits="1" branch="false" />
                <line number="123" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
                <line number="128" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="112" hits="1" branch="false" />
            <line number="113" hits="1" branch="false" />
            <line number="114" hits="1" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="122" hits="1" branch="false" />
            <line number="123" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="WpfFileWorking" line-rate="0.581632653061224" branch-rate="0.597560975609756" complexity="97">
      <classes>
        <class name="WpfFileWorking.Services.CarService" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Services\CarService.cs" line-rate="0.7" branch-rate="0.75" complexity="NaN">
          <methods>
            <method name="GetCarFromDialog" signature="(WpfFileWorking.Services.ICarDialog)" line-rate="0.7" branch-rate="0.75" complexity="NaN">
              <lines>
                <line number="9" hits="2" branch="false" />
                <line number="10" hits="2" branch="true" condition-coverage="50% (1/2)" />
                <line number="11" hits="0" branch="false" />
                <line number="12" hits="0" branch="false" />
                <line number="13" hits="0" branch="false" />
                <line number="15" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="2" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="2" branch="false" />
            <line number="10" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="11" hits="0" branch="false" />
            <line number="12" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="15" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="2" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Services.DialogService" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Services\DialogService.cs" line-rate="0" branch-rate="0" complexity="2">
          <methods>
            <method name="OpenFileDialogPath" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SaveFileDialogPath" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetDialogPath" signature="(Microsoft.Win32.FileDialog)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
                <line number="23" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="24" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="23" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="24" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Services.IntegerValidationRule" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Services\IntegerValidationRule.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Validate" signature="(System.Object,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="12" hits="10" branch="false" />
                <line number="13" hits="10" branch="true" condition-coverage="100% (2/2)" />
                <line number="14" hits="6" branch="false" />
                <line number="15" hits="6" branch="true" condition-coverage="100% (2/2)" />
                <line number="16" hits="3" branch="false" />
                <line number="17" hits="3" branch="false" />
                <line number="20" hits="3" branch="false" />
                <line number="23" hits="4" branch="false" />
                <line number="24" hits="4" branch="false" />
                <line number="26" hits="10" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="10" branch="false" />
            <line number="13" hits="10" branch="true" condition-coverage="100% (2/2)" />
            <line number="14" hits="6" branch="false" />
            <line number="15" hits="6" branch="true" condition-coverage="100% (2/2)" />
            <line number="16" hits="3" branch="false" />
            <line number="17" hits="3" branch="false" />
            <line number="20" hits="3" branch="false" />
            <line number="23" hits="4" branch="false" />
            <line number="24" hits="4" branch="false" />
            <line number="26" hits="10" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Services.TrainCarJsonService" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Services\TrainCarJsonService.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="SerializeToFile" signature="(System.Collections.Generic.List`1&lt;Task_2_DynamicTypeIdentification.TrainCar&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
                <line number="23" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeserializedFromFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="27" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
              </lines>
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="1" branch="false" />
                <line number="12" hits="1" branch="false" />
                <line number="13" hits="1" branch="false" />
                <line number="14" hits="1" branch="false" />
                <line number="15" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="1" branch="false" />
            <line number="12" hits="1" branch="false" />
            <line number="13" hits="1" branch="false" />
            <line number="14" hits="1" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="23" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Services.TrainCarViewModelConverter" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Services\TrainCarViewModelConverter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryGetViewModel" signature="(System.Object,CommunityToolkit.Mvvm.ComponentModel.ObservableObject&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="14" hits="6" branch="false" />
                <line number="15" hits="6" branch="true" condition-coverage="100% (2/2)" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="21" hits="5" branch="true" condition-coverage="100% (2/2)" />
                <line number="22" hits="1" branch="false" />
                <line number="23" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
                <line number="27" hits="4" branch="true" condition-coverage="100% (2/2)" />
                <line number="28" hits="2" branch="false" />
                <line number="29" hits="2" branch="false" />
                <line number="30" hits="2" branch="false" />
                <line number="33" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="6" branch="false" />
              </lines>
            </method>
            <method name="Convert" signature="(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="44" hits="7" branch="false" />
                <line number="45" hits="7" branch="true" condition-coverage="100% (2/2)" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="50" hits="6" branch="false" />
                <line number="51" hits="6" branch="true" condition-coverage="100% (2/2)" />
                <line number="52" hits="7" branch="false" />
              </lines>
            </method>
            <method name="ConvertBack" signature="(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="55" hits="2" branch="false" />
                <line number="56" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="57" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="6" branch="false" />
            <line number="15" hits="6" branch="true" condition-coverage="100% (2/2)" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="21" hits="5" branch="true" condition-coverage="100% (2/2)" />
            <line number="22" hits="1" branch="false" />
            <line number="23" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="27" hits="4" branch="true" condition-coverage="100% (2/2)" />
            <line number="28" hits="2" branch="false" />
            <line number="29" hits="2" branch="false" />
            <line number="30" hits="2" branch="false" />
            <line number="33" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="6" branch="false" />
            <line number="44" hits="7" branch="false" />
            <line number="45" hits="7" branch="true" condition-coverage="100% (2/2)" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="50" hits="6" branch="false" />
            <line number="51" hits="6" branch="true" condition-coverage="100% (2/2)" />
            <line number="52" hits="7" branch="false" />
            <line number="55" hits="2" branch="false" />
            <line number="56" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="57" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Services.ViewConverter" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Services\ViewLocator.cs" line-rate="0" branch-rate="0" complexity="NaN">
          <methods>
            <method name="Convert" signature="(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="17" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="22" hits="0" branch="false" />
                <line number="23" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ConvertBack" signature="(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="28" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="17" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="22" hits="0" branch="false" />
            <line number="23" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.CompartmentalCarViewModel" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\CompartmentalCarViewModel.cs" line-rate="1" branch-rate="0.5" complexity="1">
          <methods>
            <method name="IncludesSoundProofing" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="2" branch="false" />
              </lines>
            </method>
            <method name="IncludesSoundProofing" signature="(System.Boolean)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="23" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name=".ctor" signature="(Task_2_DynamicTypeIdentification.CompartmentalCar)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="8" hits="2" branch="false" />
                <line number="9" hits="2" branch="false" />
                <line number="10" hits="2" branch="false" />
                <line number="11" hits="2" branch="false" />
                <line number="12" hits="2" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="14" hits="1" branch="false" />
                <line number="15" hits="1" branch="false" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="8" hits="2" branch="false" />
            <line number="9" hits="2" branch="false" />
            <line number="10" hits="2" branch="false" />
            <line number="11" hits="2" branch="false" />
            <line number="12" hits="2" branch="false" />
            <line number="14" hits="1" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="22" hits="2" branch="false" />
            <line number="23" hits="2" branch="true" condition-coverage="50% (1/2)" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.DeepObservableCollection`1" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\DeepObservableCollection.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="14" hits="24" branch="false" />
                <line number="15" hits="24" branch="false" />
                <line number="16" hits="24" branch="false" />
                <line number="17" hits="24" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.List`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="6" branch="false" />
                <line number="20" hits="6" branch="false" />
                <line number="21" hits="6" branch="false" />
                <line number="22" hits="6" branch="true" condition-coverage="100% (2/2)" />
                <line number="23" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
                <line number="27" hits="73" branch="false" />
                <line number="28" hits="29" branch="false" />
                <line number="29" hits="29" branch="false" />
                <line number="30" hits="29" branch="false" />
                <line number="31" hits="6" branch="false" />
              </lines>
            </method>
            <method name="MainCollectionChanged" signature="(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="34" hits="111" branch="false" />
                <line number="35" hits="111" branch="false" />
                <line number="36" hits="111" branch="false" />
                <line number="37" hits="111" branch="false" />
              </lines>
            </method>
            <method name="ItemPropertyChanged" signature="(System.Object,System.ComponentModel.PropertyChangedEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="40" hits="2" branch="false" />
                <line number="41" hits="2" branch="false" />
                <line number="42" hits="2" branch="false" />
                <line number="43" hits="2" branch="false" />
                <line number="44" hits="2" branch="false" />
                <line number="45" hits="2" branch="false" />
                <line number="47" hits="2" branch="false" />
                <line number="48" hits="2" branch="false" />
              </lines>
            </method>
            <method name="SubscribeNewItemsToPropertyChanged" signature="(System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="51" hits="111" branch="false" />
                <line number="52" hits="111" branch="true" condition-coverage="100% (2/2)" />
                <line number="53" hits="5" branch="false" />
                <line number="54" hits="5" branch="false" />
                <line number="57" hits="530" branch="false" />
                <line number="58" hits="106" branch="false" />
                <line number="59" hits="138" branch="true" condition-coverage="100% (2/2)" />
                <line number="60" hits="74" branch="false" />
                <line number="61" hits="74" branch="false" />
                <line number="62" hits="111" branch="false" />
              </lines>
            </method>
            <method name="UnsubscribeOldItemsFromPropertyChanged" signature="(System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="65" hits="111" branch="false" />
                <line number="66" hits="111" branch="true" condition-coverage="100% (2/2)" />
                <line number="67" hits="101" branch="false" />
                <line number="68" hits="101" branch="false" />
                <line number="71" hits="50" branch="false" />
                <line number="72" hits="10" branch="false" />
                <line number="73" hits="12" branch="true" condition-coverage="100% (2/2)" />
                <line number="74" hits="8" branch="false" />
                <line number="75" hits="8" branch="false" />
                <line number="76" hits="111" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="24" branch="false" />
            <line number="15" hits="24" branch="false" />
            <line number="16" hits="24" branch="false" />
            <line number="17" hits="24" branch="false" />
            <line number="19" hits="6" branch="false" />
            <line number="20" hits="6" branch="false" />
            <line number="21" hits="6" branch="false" />
            <line number="22" hits="6" branch="true" condition-coverage="100% (2/2)" />
            <line number="23" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="27" hits="73" branch="false" />
            <line number="28" hits="29" branch="false" />
            <line number="29" hits="29" branch="false" />
            <line number="30" hits="29" branch="false" />
            <line number="31" hits="6" branch="false" />
            <line number="34" hits="111" branch="false" />
            <line number="35" hits="111" branch="false" />
            <line number="36" hits="111" branch="false" />
            <line number="37" hits="111" branch="false" />
            <line number="40" hits="2" branch="false" />
            <line number="41" hits="2" branch="false" />
            <line number="42" hits="2" branch="false" />
            <line number="43" hits="2" branch="false" />
            <line number="44" hits="2" branch="false" />
            <line number="45" hits="2" branch="false" />
            <line number="47" hits="2" branch="false" />
            <line number="48" hits="2" branch="false" />
            <line number="51" hits="111" branch="false" />
            <line number="52" hits="111" branch="true" condition-coverage="100% (2/2)" />
            <line number="53" hits="5" branch="false" />
            <line number="54" hits="5" branch="false" />
            <line number="57" hits="530" branch="false" />
            <line number="58" hits="106" branch="false" />
            <line number="59" hits="138" branch="true" condition-coverage="100% (2/2)" />
            <line number="60" hits="74" branch="false" />
            <line number="61" hits="74" branch="false" />
            <line number="62" hits="111" branch="false" />
            <line number="65" hits="111" branch="false" />
            <line number="66" hits="111" branch="true" condition-coverage="100% (2/2)" />
            <line number="67" hits="101" branch="false" />
            <line number="68" hits="101" branch="false" />
            <line number="71" hits="50" branch="false" />
            <line number="72" hits="10" branch="false" />
            <line number="73" hits="12" branch="true" condition-coverage="100% (2/2)" />
            <line number="74" hits="8" branch="false" />
            <line number="75" hits="8" branch="false" />
            <line number="76" hits="111" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.EconomClassViewModel" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\EconomClassViewModel.cs" line-rate="1" branch-rate="0.5" complexity="1">
          <methods>
            <method name="LevelCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="23" hits="2" branch="false" />
              </lines>
            </method>
            <method name="LevelCount" signature="(System.Int32)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="24" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name=".ctor" signature="(Task_2_DynamicTypeIdentification.EconomClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="6" branch="false" />
                <line number="10" hits="6" branch="false" />
                <line number="11" hits="6" branch="false" />
                <line number="12" hits="6" branch="false" />
                <line number="13" hits="6" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="15" hits="1" branch="false" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="6" branch="false" />
            <line number="10" hits="6" branch="false" />
            <line number="11" hits="6" branch="false" />
            <line number="12" hits="6" branch="false" />
            <line number="13" hits="6" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="23" hits="2" branch="false" />
            <line number="24" hits="2" branch="true" condition-coverage="50% (1/2)" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.EmptyViewModel" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\EmptyViewModel.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="2" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="2" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.KitchenCarViewModel" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\KitchenCarViewModel.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Dishes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="4" branch="false" />
              </lines>
            </method>
            <method name="Dishes" signature="(WpfFileWorking.ViewModels.ListWrapper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="4" branch="false" />
              </lines>
            </method>
            <method name="AddDishCommand" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="32" hits="2" branch="true" condition-coverage="100% (2/2)" />
              </lines>
            </method>
            <method name="RemoveDishCommand" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="34" hits="2" branch="true" condition-coverage="100% (2/2)" />
              </lines>
            </method>
            <method name=".ctor" signature="(Task_2_DynamicTypeIdentification.KitchenCar)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="3" branch="false" />
                <line number="10" hits="3" branch="false" />
                <line number="11" hits="3" branch="false" />
                <line number="12" hits="3" branch="false" />
                <line number="13" hits="3" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="15" hits="1" branch="false" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
              </lines>
            </method>
            <method name="AddDish" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
              </lines>
            </method>
            <method name="RemoveDish" signature="(WpfFileWorking.ViewModels.ObservableString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="3" branch="false" />
            <line number="10" hits="3" branch="false" />
            <line number="11" hits="3" branch="false" />
            <line number="12" hits="3" branch="false" />
            <line number="13" hits="3" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="24" hits="4" branch="false" />
            <line number="25" hits="4" branch="false" />
            <line number="32" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="34" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.ListWrapper" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\ListWrapper.cs" line-rate="1" branch-rate="0.75" complexity="2">
          <methods>
            <method name="ObservableList" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="23" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="15" hits="19" branch="false" />
                <line number="16" hits="19" branch="false" />
                <line number="17" hits="19" branch="false" />
                <line number="18" hits="19" branch="false" />
                <line number="19" hits="19" branch="false" />
                <line number="21" hits="19" branch="false" />
                <line number="22" hits="19" branch="false" />
              </lines>
            </method>
            <method name="InitializeObservableStrings" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="25" hits="19" branch="false" />
                <line number="26" hits="147" branch="false" />
                <line number="27" hits="45" branch="false" />
                <line number="28" hits="45" branch="false" />
                <line number="29" hits="45" branch="false" />
                <line number="30" hits="19" branch="false" />
              </lines>
            </method>
            <method name="ObservableListOnCollectionChanged" signature="(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" line-rate="1" branch-rate="0.75" complexity="NaN">
              <lines>
                <line number="33" hits="9" branch="false" />
                <line number="34" hits="9" branch="false" />
                <line number="35" hits="9" branch="true" condition-coverage="75% (3/4)" />
                <line number="38" hits="4" branch="false" />
                <line number="39" hits="4" branch="false" />
                <line number="40" hits="4" branch="false" />
                <line number="43" hits="3" branch="false" />
                <line number="44" hits="3" branch="false" />
                <line number="45" hits="3" branch="false" />
                <line number="48" hits="2" branch="false" />
                <line number="49" hits="2" branch="false" />
                <line number="50" hits="2" branch="false" />
                <line number="52" hits="9" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="23" branch="false" />
            <line number="15" hits="19" branch="false" />
            <line number="16" hits="19" branch="false" />
            <line number="17" hits="19" branch="false" />
            <line number="18" hits="19" branch="false" />
            <line number="19" hits="19" branch="false" />
            <line number="21" hits="19" branch="false" />
            <line number="22" hits="19" branch="false" />
            <line number="25" hits="19" branch="false" />
            <line number="26" hits="147" branch="false" />
            <line number="27" hits="45" branch="false" />
            <line number="28" hits="45" branch="false" />
            <line number="29" hits="45" branch="false" />
            <line number="30" hits="19" branch="false" />
            <line number="33" hits="9" branch="false" />
            <line number="34" hits="9" branch="false" />
            <line number="35" hits="9" branch="true" condition-coverage="75% (3/4)" />
            <line number="38" hits="4" branch="false" />
            <line number="39" hits="4" branch="false" />
            <line number="40" hits="4" branch="false" />
            <line number="43" hits="3" branch="false" />
            <line number="44" hits="3" branch="false" />
            <line number="45" hits="3" branch="false" />
            <line number="48" hits="2" branch="false" />
            <line number="49" hits="2" branch="false" />
            <line number="50" hits="2" branch="false" />
            <line number="52" hits="9" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.LocomotiveCarViewModel" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\LocomotiveCarViewModel.cs" line-rate="1" branch-rate="0.5" complexity="1">
          <methods>
            <method name="EnginePower" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="2" branch="false" />
              </lines>
            </method>
            <method name="EnginePower" signature="(System.Int32)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="20" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name="MaxSpeed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="2" branch="false" />
              </lines>
            </method>
            <method name="MaxSpeed" signature="(System.Int32)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="26" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name=".ctor" signature="(Task_2_DynamicTypeIdentification.Locomotive)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="7" hits="6" branch="false" />
                <line number="8" hits="6" branch="false" />
                <line number="9" hits="6" branch="false" />
                <line number="10" hits="6" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="12" hits="1" branch="false" />
                <line number="13" hits="1" branch="false" />
                <line number="14" hits="1" branch="false" />
                <line number="15" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="6" branch="false" />
            <line number="8" hits="6" branch="false" />
            <line number="9" hits="6" branch="false" />
            <line number="10" hits="6" branch="false" />
            <line number="12" hits="1" branch="false" />
            <line number="13" hits="1" branch="false" />
            <line number="14" hits="1" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="19" hits="2" branch="false" />
            <line number="20" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="25" hits="2" branch="false" />
            <line number="26" hits="2" branch="true" condition-coverage="50% (1/2)" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.ObservableCar`1" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\ObservableCar.cs" line-rate="1" branch-rate="0.5" complexity="1">
          <methods>
            <method name="WrappedCar" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="74" branch="false" />
              </lines>
            </method>
            <method name="WrappedCar" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="74" branch="false" />
              </lines>
            </method>
            <method name="Mass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Mass" signature="(System.Int32)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="14" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Length" signature="(System.Int32)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="20" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name="GetTrainCar" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="24" hits="5" branch="false" />
                <line number="25" hits="5" branch="false" />
                <line number="26" hits="5" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="74" branch="false" />
            <line number="13" hits="2" branch="false" />
            <line number="14" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="19" hits="2" branch="false" />
            <line number="20" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="24" hits="5" branch="false" />
            <line number="25" hits="5" branch="false" />
            <line number="26" hits="5" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.ObservablePassengerCar`1" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\ObservablePassengerCar.cs" line-rate="1" branch-rate="0.833333333333333" complexity="1">
          <methods>
            <method name="PassengerCapacity" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="3" branch="false" />
              </lines>
            </method>
            <method name="PassengerCapacity" signature="(System.Int32)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="11" hits="2" branch="true" condition-coverage="50% (1/2)" />
              </lines>
            </method>
            <method name="Passengers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="17" hits="7" branch="false" />
              </lines>
            </method>
            <method name="Passengers" signature="(WpfFileWorking.ViewModels.ListWrapper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="18" hits="10" branch="false" />
              </lines>
            </method>
            <method name="AddPassengerCommand" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="2" branch="true" condition-coverage="100% (2/2)" />
              </lines>
            </method>
            <method name="RemovePassengerCommand" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="27" hits="2" branch="true" condition-coverage="100% (2/2)" />
              </lines>
            </method>
            <method name="AddPassenger" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
              </lines>
            </method>
            <method name="RemovePassenger" signature="(WpfFileWorking.ViewModels.ObservableString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="3" branch="false" />
            <line number="11" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="17" hits="7" branch="false" />
            <line number="18" hits="10" branch="false" />
            <line number="25" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="27" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.ObservableString" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\ObservableString.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="50" branch="false" />
              </lines>
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="11" hits="75" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="14" hits="144" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="15" hits="2" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="50" branch="false" />
            <line number="11" hits="75" branch="false" />
            <line number="14" hits="144" branch="false" />
            <line number="15" hits="2" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.ViewModels.TrainsExplorerViewModel" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\ViewModels\TrainsExplorerViewModel.cs" line-rate="0" branch-rate="0" complexity="11">
          <methods>
            <method name="ShownCars" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ShownCars" signature="(System.Collections.ObjectModel.ObservableCollection`1&lt;Task_2_DynamicTypeIdentification.TrainCar&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="0" branch="false" />
              </lines>
            </method>
            <method name="CurrentFile" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="32" hits="0" branch="false" />
              </lines>
            </method>
            <method name="CurrentFile" signature="(System.String)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="33" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SearchText" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="40" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SearchText" signature="(System.String)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="45" hits="0" branch="false" />
                <line number="46" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelectedCar" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="63" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelectedCar" signature="(Task_2_DynamicTypeIdentification.TrainCar)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="64" hits="0" branch="false" />
              </lines>
            </method>
            <method name="OpenFileCommand" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="74" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SaveFileCommand" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="75" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SaveFileAsCommand" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="76" hits="0" branch="false" />
              </lines>
            </method>
            <method name="QuitCommand" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="77" hits="0" branch="false" />
              </lines>
            </method>
            <method name="AddCarCommand" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="78" hits="0" branch="false" />
              </lines>
            </method>
            <method name="RemoveCarCommand" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="79" hits="0" branch="false" />
              </lines>
            </method>
            <method name="OpenFile" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="82" hits="0" branch="false" />
                <line number="83" hits="0" branch="false" />
                <line number="84" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="85" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="89" hits="0" branch="false" />
                <line number="91" hits="0" branch="false" />
                <line number="92" hits="0" branch="false" />
                <line number="93" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SaveCurrentFile" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="96" hits="0" branch="false" />
                <line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="98" hits="0" branch="false" />
                <line number="99" hits="0" branch="false" />
                <line number="100" hits="0" branch="false" />
                <line number="101" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SaveFileAs" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="104" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="106" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="107" hits="0" branch="false" />
                <line number="108" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="112" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Quit" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="115" hits="0" branch="false" />
                <line number="116" hits="0" branch="false" />
                <line number="117" hits="0" branch="false" />
              </lines>
            </method>
            <method name="AddCar" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="120" hits="0" branch="false" />
                <line number="121" hits="0" branch="false" />
                <line number="122" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="123" hits="0" branch="false" />
                <line number="124" hits="0" branch="false" />
                <line number="127" hits="0" branch="false" />
                <line number="128" hits="0" branch="false" />
                <line number="129" hits="0" branch="false" />
              </lines>
            </method>
            <method name="RemoveCar" signature="(Task_2_DynamicTypeIdentification.TrainCar)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="132" hits="0" branch="false" />
                <line number="133" hits="0" branch="false" />
                <line number="134" hits="0" branch="false" />
                <line number="135" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="0" complexity="1">
              <lines>
                <line number="20" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="33" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="45" hits="0" branch="false" />
                <line number="46" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
                <line number="64" hits="0" branch="false" />
                <line number="74" hits="0" branch="false" />
                <line number="75" hits="0" branch="false" />
                <line number="76" hits="0" branch="false" />
                <line number="77" hits="0" branch="false" />
                <line number="78" hits="0" branch="false" />
                <line number="79" hits="0" branch="false" />
                <line number="82" hits="0" branch="false" />
                <line number="83" hits="0" branch="false" />
                <line number="84" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="85" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="89" hits="0" branch="false" />
                <line number="91" hits="0" branch="false" />
                <line number="92" hits="0" branch="false" />
                <line number="93" hits="0" branch="false" />
                <line number="96" hits="0" branch="false" />
                <line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="98" hits="0" branch="false" />
                <line number="99" hits="0" branch="false" />
                <line number="100" hits="0" branch="false" />
                <line number="101" hits="0" branch="false" />
                <line number="104" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="106" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="107" hits="0" branch="false" />
                <line number="108" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="112" hits="0" branch="false" />
                <line number="115" hits="0" branch="false" />
                <line number="116" hits="0" branch="false" />
                <line number="117" hits="0" branch="false" />
                <line number="120" hits="0" branch="false" />
                <line number="121" hits="0" branch="false" />
                <line number="122" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="123" hits="0" branch="false" />
                <line number="124" hits="0" branch="false" />
                <line number="127" hits="0" branch="false" />
                <line number="128" hits="0" branch="false" />
                <line number="129" hits="0" branch="false" />
                <line number="132" hits="0" branch="false" />
                <line number="133" hits="0" branch="false" />
                <line number="134" hits="0" branch="false" />
                <line number="135" hits="0" branch="false" />
                <line number="137" hits="0" branch="false" />
                <line number="138" hits="0" branch="false" />
                <line number="139" hits="0" branch="false" />
                <line number="140" hits="0" branch="false" />
                <line number="141" hits="0" branch="false" />
                <line number="142" hits="0" branch="false" />
                <line number="144" hits="0" branch="false" />
                <line number="145" hits="0" branch="false" />
                <line number="146" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".cctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="45" hits="0" branch="false" />
            <line number="46" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="64" hits="0" branch="false" />
            <line number="74" hits="0" branch="false" />
            <line number="75" hits="0" branch="false" />
            <line number="76" hits="0" branch="false" />
            <line number="77" hits="0" branch="false" />
            <line number="78" hits="0" branch="false" />
            <line number="79" hits="0" branch="false" />
            <line number="82" hits="0" branch="false" />
            <line number="83" hits="0" branch="false" />
            <line number="84" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="85" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="89" hits="0" branch="false" />
            <line number="91" hits="0" branch="false" />
            <line number="92" hits="0" branch="false" />
            <line number="93" hits="0" branch="false" />
            <line number="96" hits="0" branch="false" />
            <line number="97" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="98" hits="0" branch="false" />
            <line number="99" hits="0" branch="false" />
            <line number="100" hits="0" branch="false" />
            <line number="101" hits="0" branch="false" />
            <line number="104" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="106" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="107" hits="0" branch="false" />
            <line number="108" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="112" hits="0" branch="false" />
            <line number="115" hits="0" branch="false" />
            <line number="116" hits="0" branch="false" />
            <line number="117" hits="0" branch="false" />
            <line number="120" hits="0" branch="false" />
            <line number="121" hits="0" branch="false" />
            <line number="122" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="123" hits="0" branch="false" />
            <line number="124" hits="0" branch="false" />
            <line number="127" hits="0" branch="false" />
            <line number="128" hits="0" branch="false" />
            <line number="129" hits="0" branch="false" />
            <line number="132" hits="0" branch="false" />
            <line number="133" hits="0" branch="false" />
            <line number="134" hits="0" branch="false" />
            <line number="135" hits="0" branch="false" />
            <line number="137" hits="0" branch="false" />
            <line number="138" hits="0" branch="false" />
            <line number="139" hits="0" branch="false" />
            <line number="140" hits="0" branch="false" />
            <line number="141" hits="0" branch="false" />
            <line number="142" hits="0" branch="false" />
            <line number="144" hits="0" branch="false" />
            <line number="145" hits="0" branch="false" />
            <line number="146" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.CarViews.PassengerCarBaseView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\CarViews\PassengerCarBaseView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.CarViews.TrainCarBaseView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\CarViews\TrainCarBaseView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.CompartmentalCarView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\CompartmentalCarView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.EconomClassView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\EconomClassView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.EmptyView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\EmptyView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.KitchenCarView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\KitchenCarView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.LocomotiveCarView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\LocomotiveCarView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.NewCarVindow" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\NewCarVindow.xaml.cs" line-rate="0" branch-rate="0" complexity="2">
          <methods>
            <method name="SelectedCar" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelectedCar" signature="(Task_2_DynamicTypeIdentification.TrainCar)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="0" branch="false" />
                <line number="12" hits="0" branch="false" />
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetCarFromSelectionIndex" signature="(System.Int32)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="32" hits="0" branch="false" />
                <line number="33" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="35" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Selector_OnSelectionChanged" signature="(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="40" hits="0" branch="false" />
                <line number="41" hits="0" branch="false" />
                <line number="42" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
                <line number="48" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".cctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="0" branch="false" />
            <line number="12" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="32" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="35" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="41" hits="0" branch="false" />
            <line number="42" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="48" hits="0" branch="false" />
            <line number="49" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WpfFileWorking.Views.TrainsExplorerView" filename="D:\Storage\Repositories\repos\OOP_LABS\LaboratoryWorkNo16\WpfFileWorking\Views\TrainsExplorerView.xaml.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="7" hits="0" branch="false" />
                <line number="8" hits="0" branch="false" />
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="0" branch="false" />
            <line number="8" hits="0" branch="false" />
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="xunit.runner.reporters.net452" line-rate="0.0074280408542247" branch-rate="0.00256410256410256" complexity="373">
      <classes>
        <class name="Xunit.EnvironmentHelper" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\Utility\EnvironmentHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetEnvironmentVariable" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonArray" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonValue[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBoolean" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonBoolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBuffer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="15">
              <lines />
            </method>
            <method name="ReadNextChar" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ReadNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadString" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="IsWhitespace" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Deserialize" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeInternal" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeArray" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeObject" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerException" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerResource" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="JSON_OpenString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JSON_InvalidEnd" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalCharacter" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalTrailingCharacterAfterLiteral" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnrecognizedLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_DuplicateObjectMemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidFloatNumberFormat" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_FloatNumberOverflow" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntax" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidTokenExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidUnicode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnfinishedJSON" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNull" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNumber" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Double" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raw" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonObject" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,Xunit.JsonValue&gt;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsJsonObject" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsBoolean" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsNullableBoolean" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsStringArray" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonString" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonValue" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.AppVeyorClient" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\AppVeyorClient.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitOne" signature="(System.Threading.CancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunLoop" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendRequest" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.AppVeyorReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\AppVeyorReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.AppVeyorReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\AppVeyorReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFinishedTestName" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppVeyorAddTest" signature="(System.String,System.String,System.String,System.String,System.Nullable`1&lt;System.Int64&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppVeyorUpdateTest" signature="(System.String,System.String,System.String,System.String,System.Nullable`1&lt;System.Int64&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrimStdOut" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.JsonExtentions" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\JsonExtentions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ToJson" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddValue" signature="(System.Text.StringBuilder,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JsonEscape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="initObject" signature="(System.String,System.Object,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCollectionStarting,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCollectionFinished,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestFailed,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestSkipped,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestStarting,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestPassed,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.JsonReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\JsonReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.JsonReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\JsonReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.Func`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToFlowId" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.QuietReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\QuietReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.QuietReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\QuietReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.TeamCityDisplayNameFormatter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\Utility\TeamCityDisplayNameFormatter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DisplayName" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.TeamCityReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\TeamCityReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.TeamCityReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\TeamCityReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.Func`2&lt;System.String,System.String&gt;,Xunit.Runner.Reporters.TeamCityDisplayNameFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogFinish" signature="(Xunit.Abstractions.ITestResultMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAscii" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToFlowId" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VerboseReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VerboseReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VerboseReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VerboseReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VstsClient" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VstsClient.cs" line-rate="1" branch-rate="1" complexity="64">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitOne" signature="(System.Threading.CancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunLoop" signature="()" line-rate="1" branch-rate="1" complexity="18">
              <lines />
            </method>
            <method name="CreateTestRun" signature="()" line-rate="1" branch-rate="1" complexity="12">
              <lines />
            </method>
            <method name="FinishTestRun" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="SendTestResults" signature="()" line-rate="1" branch-rate="1" complexity="24">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VstsReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VstsReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VstsReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VstsReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VstsAddTest" signature="(System.String,System.String,System.String,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VstsUpdateTest" signature="(Xunit.Abstractions.ITest,System.String,System.Nullable`1&lt;System.Int64&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrimStdOut" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitWorkerThread" filename="C:\Dev\xunit\xunit\src\common\XunitWorkerThread.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Join" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="QueueUserWorkItem" signature="(System.Action,System.Threading.EventWaitHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.runner.utility.net452" line-rate="0.180746561886051" branch-rate="0.0982495765104461" complexity="1690">
      <classes>
        <class name="AssemblyExtensions" filename="C:\Dev\xunit\xunit\src\common\AssemblyExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetLocalCodeBase" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLocalCodeBase" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommonTasks" filename="C:\Dev\xunit\xunit\src\common\CommonTasks.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DictionaryExtensions" filename="C:\Dev\xunit\xunit\src\common\DictionaryExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey,System.Func`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Func`2&lt;TValue,TKey&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TInput&gt;,System.Func`2&lt;TInput,TKey&gt;,System.Func`2&lt;TInput,TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DisposableExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\DisposableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SafeDispose" signature="(System.IDisposable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="ExceptionExtensions" filename="C:\Dev\xunit\xunit\src\common\ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RethrowWithNoStackTraceLoss" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Guard" filename="C:\Dev\xunit\xunit\src\common\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileExists" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="IRunnerLoggerExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\IRunnerLoggerExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LogMessage" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="MessageSinkMessageExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\MessageSinkMessageExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Cast" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatch" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;,Xunit.MessageHandler`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="MessageSinkWithTypesExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\MessageSinkWithTypesExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="OnMessage" signature="(Xunit.IMessageSinkWithTypes,Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NewReflectionExtensions" filename="C:\Dev\xunit\xunit\src\common\NewReflectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetAssembly" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFromLocalAssembly" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericTypeDefinition" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullableEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValueType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnwrapNullable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericArguments" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestFrameworkExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\TestFrameworkExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Find" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer,System.Boolean,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer,System.String,System.Boolean,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.ITestFrameworkExecutor,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(Xunit.Abstractions.ITestFrameworkExecutor,System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestFrameworkOptionsReadWriteExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\TestFrameworkOptionsReadWriteExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplay" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplayOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplayOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplayOptionsOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPreEnumerateTheories" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPreEnumerateTheoriesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReportingOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetMethodDisplay" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetMethodDisplayOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPreEnumerateTheories" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisableParallelization" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisableParallelizationOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMaxParallelThreads" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMaxParallelThreadsOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReportingOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStopOnTestFail" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDisableParallelization" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetMaxParallelThreads" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestOptionsNames" filename="C:\Dev\xunit\xunit\src\common\TestOptionsNames.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="XmlNodeExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\XmlNodeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ToTestCase" signature="(System.Xml.XmlNode,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit._DiagnosticMessage" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\_DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AfterTestFinished" filename="C:\Dev\xunit\xunit\src\messages\AfterTestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AfterTestStarting" filename="C:\Dev\xunit\xunit\src\messages\AfterTestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AggregateMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\AggregateMessageSink.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="AggregatedSinks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetOrCreateAggregatedSink" signature="(TDispatcher&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AppDomainManager_AppDomain" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\AppDomain\AppDomainManager_AppDomain.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.AppDomain)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateAppDomain" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObjectFrom" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObject" signature="(System.Reflection.AssemblyName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetDefaultConfigFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AppDomainManager_NoAppDomain" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\AppDomain\AppDomainManager_NoAppDomain.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="HasAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObject" signature="(System.Reflection.AssemblyName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObjectFrom" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AppDomainManagerFactory" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\AppDomain\AppDomainManagerFactory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Create" signature="(System.Boolean,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AssemblyHelper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\AssemblyHelper_Desktop.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="LoadAssembly" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveAndLoadAssembly" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.Type,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.BeforeTestFinished" filename="C:\Dev\xunit\xunit\src\messages\BeforeTestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.BeforeTestStarting" filename="C:\Dev\xunit\xunit\src\messages\BeforeTestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConfigReader" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Configuration\ConfigReader.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Load" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConfigReader_Configuration" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Configuration\ConfigReader_Configuration.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Load" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetBoolean" signature="(System.Configuration.KeyValueConfigurationCollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnum" signature="(System.Configuration.KeyValueConfigurationCollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInt" signature="(System.Configuration.KeyValueConfigurationCollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.Configuration.KeyValueConfigurationCollection,System.String,System.Func`2&lt;System.String,T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConfigReader_Json" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Configuration\ConfigReader_Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Load" signature="(System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="File_OpenRead" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConsoleHelper" filename="C:\Dev\xunit\xunit\src\common\ConsoleHelper.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetForegroundColorANSI" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetForegroundColorConsole" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetColorANSI" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResetColorConsole" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConsoleRunnerLogger" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\ConsoleRunnerLogger.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="LockObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetColor" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Logger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Logger" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddExecutionOptions" signature="(System.String,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.Abstractions.ITestAssemblyMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogStackTrace" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogOutput" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFailed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestPassed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteDefaultSummary" signature="(Xunit.IRunnerLogger,Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReadLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporterWithTypes" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporterWithTypes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporterWithTypesMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporterWithTypesMessageHandler.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Logger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Logger" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddExecutionOptions" signature="(System.String,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.Abstractions.ITestAssemblyMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogStackTrace" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogOutput" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyDiscoveryFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyDiscoveryFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyDiscoveryStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyDiscoveryStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyExecutionFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyExecutionFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyExecutionStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyExecutionStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestClassCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestExecutionSummary" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestExecutionSummary&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteDefaultSummary" signature="(Xunit.IRunnerLogger,Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReadLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultTestCaseBulkDeserializer" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Descriptor\DefaultTestCaseBulkDeserializer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestFrameworkExecutor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BulkDeserialize" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultTestCaseDescriptorProvider" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Descriptor\DefaultTestCaseDescriptorProvider.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseDescriptors" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingExecutionSummarySink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingExecutionSummarySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes,System.Func`1&lt;System.Boolean&gt;,System.Action`2&lt;System.String,Xunit.ExecutionSummary&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingFailSkipSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingFailSkipSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingLongRunningTestDetectionSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingLongRunningTestDetectionSink.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UtcNow" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink,System.TimeSpan,Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink,System.TimeSpan,System.Action`1&lt;Xunit.LongRunningTestsSummary&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DispatchLongRunningTestsSummaryAsDiagnosticMessage" signature="(Xunit.LongRunningTestsSummary,Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendLongRunningMessage" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ThreadWorker" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="WaitForStopEvent" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingXmlCreationSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingXmlCreationSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink,System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddError" signature="(System.String,System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFailureElement" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestResultElement" signature="(Xunit.Abstractions.ITestResultMessage,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTestCollectionElement" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestClassCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlEscape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiagnosticEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\DiagnosticEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiagnosticMessage" filename="C:\Dev\xunit\xunit\src\messages\DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaNavigationData" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaNavigationData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaSession" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaSession.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaSessionWrapper" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaSessionWrapper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaSessionWrapperHelper" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaSessionWrapperHelper.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStateMachineType_NoOp" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeGetStateMachineType" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Normalize" signature="(System.String&amp;,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiscoveryEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\DiscoveryEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ErrorMessage" filename="C:\Dev\xunit\xunit\src\messages\ErrorMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExceptionUtility" filename="C:\Dev\xunit\xunit\src\common\ExceptionUtility.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CombineMessages" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CombineStackTraces" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludeStackFrame" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterStackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAt" signature="(System.String[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAt" signature="(System.Int32[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMessage" signature="(Xunit.Abstractions.IFailureInformation,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackTrace" signature="(Xunit.Abstractions.IFailureInformation,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertExceptionToFailureInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertExceptionToFailureInformation" signature="(System.Exception,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitLines" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExecutionEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\ExecutionEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExecutionSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\ExecutionSummary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Total" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Total" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.FailSkipVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\FailSkipVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonArray" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonValue[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBoolean" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonBoolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBuffer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="15">
              <lines />
            </method>
            <method name="ReadNextChar" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ReadNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadString" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="IsWhitespace" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Deserialize" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeInternal" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeArray" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeObject" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerException" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerResource" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="JSON_OpenString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JSON_InvalidEnd" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalCharacter" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalTrailingCharacterAfterLiteral" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnrecognizedLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_DuplicateObjectMemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidFloatNumberFormat" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_FloatNumberOverflow" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntax" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidTokenExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidUnicode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnfinishedJSON" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNull" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNumber" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Double" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raw" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonObject" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,Xunit.JsonValue&gt;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsJsonObject" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsBoolean" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsNullableBoolean" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsStringArray" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonString" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonValue" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.LongRunningTestsSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\LongRunningTestsSummary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConfiguredLongRunningTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.TimeSpan,System.Collections.Generic.IDictionary`2&lt;Xunit.Abstractions.ITestCase,System.TimeSpan&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageHandlerArgs" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\MessageHandlerArgs.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsStopped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsStopped" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageHandlerArgs`1" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\MessageHandlerArgs.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageSinkAdapter" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\MessageSinkAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetImplementedInterfaces" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageSinkWithTypesAdapter" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\MessageSinkWithTypesAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.NullMessageSink" filename="C:\Dev\xunit\xunit\src\common\NullMessageSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.NullSourceInformationProvider" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\NullSourceInformationProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetSourceInformation" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.OptimizedRemoteMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\OptimizedRemoteMessageSink.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMessageTypes" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.RemotingUtility" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\RemotingUtility.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CleanUpRegisteredChannels" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.RunnerEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\RunnerEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.AssemblyRunner" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\AssemblyRunner.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="OnDiagnosticMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnDiagnosticMessage" signature="(System.Action`1&lt;Xunit.Runners.DiagnosticMessageInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnDiscoveryComplete" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnDiscoveryComplete" signature="(System.Action`1&lt;Xunit.Runners.DiscoveryCompleteInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnErrorMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnErrorMessage" signature="(System.Action`1&lt;Xunit.Runners.ErrorMessageInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnExecutionComplete" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnExecutionComplete" signature="(System.Action`1&lt;Xunit.Runners.ExecutionCompleteInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFailed" signature="(System.Action`1&lt;Xunit.Runners.TestFailedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFinished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFinished" signature="(System.Action`1&lt;Xunit.Runners.TestFinishedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestOutput" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestOutput" signature="(System.Action`1&lt;Xunit.Runners.TestOutputInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestPassed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestPassed" signature="(System.Action`1&lt;Xunit.Runners.TestPassedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestSkipped" signature="(System.Action`1&lt;Xunit.Runners.TestSkippedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestStarting" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestStarting" signature="(System.Action`1&lt;Xunit.Runners.TestStartingInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Status" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseFilter" signature="(System.Func`2&lt;Xunit.Abstractions.ITestCase,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMessageTypeName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="GetDiscoveryOptions" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionOptions" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithAppDomain" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithoutAppDomain" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DispatchMessage" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;,System.Action`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.IMessageSinkWithTypes.OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.DiagnosticMessageInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\DiagnosticMessageInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.DiscoveryCompleteInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\DiscoveryCompleteInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCasesDiscovered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesToRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.ErrorMessageInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\ErrorMessageInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="MesssageType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Runners.ErrorMessageType,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.ExecutionCompleteInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\ExecutionCompleteInfo.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TotalTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestExecutedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestExecutedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestFailedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestFailedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestFinishedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestFinishedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TypeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollectionDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestOutputInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestOutputInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestPassedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestPassedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestSkippedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestSkippedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestStartingInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestStartingInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.LongLivedMarshalByRefObject" filename="C:\Dev\xunit\xunit\src\common\LongLivedMarshalByRefObject.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="DisconnectAll" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SerializationHelper" filename="C:\Dev\xunit\xunit\src\common\SerializationHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSerializable" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeNameForSerialization" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubstringTrim" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitAtOuterCommas" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitWorkerThread" filename="C:\Dev\xunit\xunit\src\common\XunitWorkerThread.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Join" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="QueueUserWorkItem" signature="(System.Action,System.Threading.EventWaitHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Serialization.XunitSerializationInfo" filename="C:\Dev\xunit\xunit\src\common\XunitSerializationInfo.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IXunitSerializable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddValue" signature="(System.String,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToSerializedString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SerializeTriple" signature="(Xunit.Serialization.XunitSerializationTriple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeTriple" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeSerializable" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanSerializeObject" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromBase64" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToBase64" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ArrayData" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Serialization.XunitSerializationTriple" filename="C:\Dev\xunit\xunit\src\common\XunitSerializationInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.SourceInformation" filename="C:\Dev\xunit\xunit\src\common\SourceInformation.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.StackFrameInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\StackFrameInfo.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromFailure" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromSourceInformation" signature="(Xunit.Abstractions.ISourceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackFrameRegex" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.StackFrameTransformer" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\StackFrameTransformer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TransformFrame" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TransformStack" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyConfiguration" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\TestAssemblyConfiguration.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.Nullable`1&lt;Xunit.AppDomainSupport&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomainOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessages" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessagesOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnosticMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnosticMessages" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnosticMessagesOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LongRunningTestSeconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LongRunningTestSeconds" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LongRunningTestSecondsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreadsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplay" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplay" signature="(System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptions" signature="(System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptionsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeAssembly" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeAssemblyOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeTestCollections" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeTestCollections" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeTestCollectionsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheories" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheoriesOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopyOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnFail" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnFail" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnFailOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyDiscoveryFinished" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyDiscoveryFinished.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesDiscovered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesDiscovered" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesToRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesToRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyDiscoveryStarting" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyDiscoveryStarting.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,System.Boolean,System.Boolean,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyExecutionFinished" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyExecutionFinished.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="(Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,Xunit.Abstractions.ITestFrameworkExecutionOptions,Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyExecutionStarting" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyExecutionStarting.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyFinished" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestAssemblyMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="(Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyStarting" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="StartTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEnvironment" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.DateTime,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCaseCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseDescriptor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Descriptor\TestCaseDescriptor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialization" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceLineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceLineNumber" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Decode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseDiscoveryMessage" filename="C:\Dev\xunit\xunit\src\messages\TestCaseDiscoveryMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseFinished" filename="C:\Dev\xunit\xunit\src\messages\TestCaseFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestCaseMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseStarting" filename="C:\Dev\xunit\xunit\src\messages\TestCaseStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassCallbackHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\TestClassCallbackHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestClassResults" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClassResults" signature="(Xunit.Xunit1RunSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IList`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindTestCase" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnClass" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnStart" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTest" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnXmlNode" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestMethodTestCases" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendTestCaseMessagesWhenAppropriate" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestClassCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassConstructionFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassConstructionFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassConstructionStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassConstructionStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassDisposeFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassDisposeFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassDisposeStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassDisposeStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestClassMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionFinished" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestCollectionMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionStarting" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestDiscoverySink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\TestDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMessageSink.OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestDiscoveryVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\TestDiscoveryVisitor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseDiscoveryMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestExecutionSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestExecutionSummary.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ElapsedClockTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ElapsedClockTime" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Summaries" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Summaries" signature="(System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,Xunit.ExecutionSummary&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,Xunit.ExecutionSummary&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFailed" filename="C:\Dev\xunit\xunit\src\messages\TestFailed.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFinished" filename="C:\Dev\xunit\xunit\src\messages\TestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFrameworkOptions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\TestFrameworkOptions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ForDiscovery" signature="(Xunit.TestAssemblyConfiguration)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForExecution" signature="(Xunit.TestAssemblyConfiguration)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetValue" signature="(System.String,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDebuggerDisplay" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToDebuggerDisplay" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\TestMessageSink.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Diagnostics" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Discovery" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execution" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runner" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessageVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\TestMessageVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DoVisit" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Func`2&lt;TMessage,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoVisit" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Func`3&lt;Xunit.TestMessageVisitor,TMessage,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IAfterTestFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IAfterTestStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IBeforeTestFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IBeforeTestStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IDiagnosticMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IDiscoveryCompleteMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseDiscoveryMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassConstructionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassConstructionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassDisposeFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassDisposeStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFailed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestPassed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessageVisitor`1" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\TestMessageVisitor.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="(System.Threading.ManualResetEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestMethodCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodFinished" filename="C:\Dev\xunit\xunit\src\messages\TestMethodFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestMethodMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodStarting" filename="C:\Dev\xunit\xunit\src\messages\TestMethodStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestOutput" filename="C:\Dev\xunit\xunit\src\messages\TestOutput.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestPassed" filename="C:\Dev\xunit\xunit\src\messages\TestPassed.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestResultMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestResultMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestSkipped" filename="C:\Dev\xunit\xunit\src\messages\TestSkipped.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestStarting" filename="C:\Dev\xunit\xunit\src\messages\TestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.VisualStudioSourceInformationProvider" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\VisualStudioSourceInformationProvider.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSourceInformation" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XmlAggregateVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\XmlAggregateVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="(Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,System.Collections.Concurrent.ConcurrentDictionary`2&lt;System.String,Xunit.ExecutionSummary&gt;,System.Xml.Linq.XElement,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XmlNodeCallbackHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\XmlNodeCallbackHandler.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="LastNode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNode" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNodeArrived" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNodeArrived" signature="(System.Threading.ManualResetEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Predicate`1&lt;System.Xml.XmlNode&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnXmlNode" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Web.UI.ICallbackEventHandler.GetCallbackResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XmlTestExecutionVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\XmlTestExecutionVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CancelThunk" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Total" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Total" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.Linq.XElement,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestResultElement" signature="(Xunit.Abstractions.ITestResultMessage,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCollectionElement" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFailed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestPassed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddError" signature="(System.String,System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFailureElement" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlEscape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="CanUseAppDomains" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateExecutor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="EnsureInitialized" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkDiscoverer.Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkDiscoverer.Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.Predicate`1&lt;Xunit.Abstractions.ITestCaseDiscoveryMessage&gt;,System.Boolean,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Run" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkExecutor.RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Run" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkExecutor.RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestCollection" signature="(Xunit.Abstractions.ITestCollection,System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestClass" signature="(Xunit.Abstractions.ITestClass,System.Collections.Generic.IList`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1AssemblyInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1AssemblyInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_AssemblyPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetTypes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1ExceptionUtility" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1ExceptionUtility.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ConvertToFailureInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToFailureInformation" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToFailureInformation" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1Executor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1Executor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObject" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EnumerateTests" signature="(System.Web.UI.ICallbackEventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitAssemblyPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Web.UI.ICallbackEventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1ReflectionWrapper" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1ReflectionWrapper.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="AssemblyFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_AssemblyPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsGenericMethodDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsPublic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsStatic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_ReturnType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_BaseType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_Interfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsGenericParameter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsGenericType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsSealed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsValueType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.GetParameters" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.MakeGenericMethod" signature="(Xunit.Abstractions.ITypeInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITypeInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITypeInfo.GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITypeInfo.GetMethod" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit-Abstractions-IAssemblyInfo-GetTypes" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Xunit-Abstractions-ITypeInfo-GetMethods" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1RunSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1RunSummary.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Aggregate" signature="(Xunit.Xunit1RunSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1Test" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1Test.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1TestCase" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1TestCase.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformation" signature="(Xunit.Abstractions.ISourceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="(System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestAssembly.get_Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_CollectionDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestClass.get_Class" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestClass.get_TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestMethod.get_Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestMethod.get_TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit2" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v2\Xunit2.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BulkDeserialize" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,Xunit.Abstractions.ITestCase&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit2Discoverer" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v2\Xunit2Discoverer.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanUseAppDomains" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Framework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoteDiscoverer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkAssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IAssemblyInfo,System.String,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IAssemblyInfo,System.String,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateOptimizedRemoteMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseDescriptors" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionAssemblyFileName" signature="(Xunit.AppDomainSupport,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSupportedPlatformSuffixes" signature="(Xunit.AppDomainSupport)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFrameworkAssemblyName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitExecutionAssemblyPath" signature="(Xunit.AppDomainSupport,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitExecutionAssemblyPath" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDotNet" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Callback" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitFilters" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Project\XunitFilters.cs" line-rate="1" branch-rate="1" complexity="22">
          <methods>
            <method name="ExcludedTraits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedTraits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludedClasses" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedClasses" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludedMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludedNamespaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedNamespaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Filter" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterExcludedNamespaces" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterIncludedNamespaces" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterExcludedMethodsAndClasses" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterIncludedMethodsAndClasses" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterExcludedTraits" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterIncludedTraits" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitMethodFilters" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SplitIncludeMethodFilters" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="SplitExcludeMethodFilters" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="WildcardToRegex" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsReadOnly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastMutation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastMutation" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Contains" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CopyTo" signature="(T[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Remove" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitFrontController" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\XunitFrontController.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="BulkDeserializer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanUseAppDomains" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DescriptorProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerController" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BulkDeserialize" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateInnerController" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="EnsureInitialized" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseDescriptors" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitProject" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Project\XunitProject.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Assemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Filters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Filters" signature="(Xunit.XunitFilters)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitProjectAssembly" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Project\XunitProjectAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyFilename" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFilename" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFilename" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFilename" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Configuration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.runner.visualstudio.testadapter" line-rate="0.236471861471861" branch-rate="0.143046357615894" complexity="717">
      <classes>
        <class name="AssemblyExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\AssemblyExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetLocalCodeBase" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DictionaryExtensions" filename="C:\Dev\xunit\xunit\src\common\DictionaryExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey,System.Func`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Func`2&lt;TValue,TKey&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TInput&gt;,System.Func`2&lt;TInput,TKey&gt;,System.Func`2&lt;TInput,TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="ExceptionExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Unwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Guard" filename="C:\Dev\xunit\xunit\src\common\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileExists" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.ApplicationEnvironment" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\ApplicationEnvironment.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="ApplicationBasePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetApplicationBasePath" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.HashCodeCombiner" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\HashCodeCombiner.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CombinedHash" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\Native\NativeMethods.Darwin.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="GetKernelRelease" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\Native\NativeMethods.Unix.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="GetUname" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\Native\NativeMethods.Windows.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="RtlGetVersion" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.PlatformApis" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\Native\PlatformApis.cs" line-rate="1" branch-rate="1" complexity="34">
          <methods>
            <method name="GetOSName" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetOSVersion" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="GetDarwinVersion" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetOSPlatform" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDistroId" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetDistroVersionId" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="LoadDistroInfo" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="NormalizeDistroInfo" signature="(Internal.Microsoft.DotNet.PlatformAbstractions.Native.PlatformApis/DistroInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DetermineOSPlatform" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.DotNet.PlatformAbstractions\RuntimeEnvironment.cs" line-rate="1" branch-rate="1" complexity="24">
          <methods>
            <method name="OperatingSystemPlatform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OperatingSystemVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OperatingSystem" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeArchitecture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRuntimeIdentifier" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRIDArch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRIDVersion" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetWindowsProductVersion" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetRIDOS" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\CompilationLibrary.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Assemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultResolver" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveReferencePaths" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResolveReferencePaths" signature="(Internal.Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveReferencePaths" signature="(Internal.Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.CompilationOptions" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\CompilationOptions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Defines" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LanguageVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Platform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowUnsafe" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WarningsAsErrors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Optimize" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="KeyFile" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelaySign" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PublicSign" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EmitEntryPoint" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateXmlDocumentation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Dependency" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Dependency.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Internal.Microsoft.Extensions.DependencyModel.Dependency)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.DependencyContextPaths" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\DependencyContextPaths.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Current" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Application" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SharedRuntime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NonApplicationPaths" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCurrent" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Create" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.DirectoryWrapper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\DirectoryWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.EnvironmentWrapper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\EnvironmentWrapper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetEnvironmentVariable" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.FileSystemWrapper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\FileSystemWrapper.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="File" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Directory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.FileWrapper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\FileWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadAllText" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OpenRead" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OpenFile" signature="(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateEmptyFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Library" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Library.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hash" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dependencies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serviceable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HashPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeStoreManifestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.AppBaseCompilationAssemblyResolver" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Resolution\AppBaseCompilationAssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String,Internal.Microsoft.Extensions.DependencyModel.DependencyContextPaths)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Resolution\CompositeCompilationAssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.DotNetReferenceAssembliesPathResolver" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Resolution\DotNetReferenceAssembliesPathResolver.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Resolve" signature="(Internal.Microsoft.Extensions.DependencyModel.IEnvironment,Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDefaultDotNetReferenceAssembliesPath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.PackageCompilationAssemblyResolver" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Resolution\PackageCompilationAssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IEnvironment,Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultProbeDirectories" signature="(Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultProbeDirectories" signature="(Internal.Microsoft.DotNet.PlatformAbstractions.Platform,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveFromPackagePath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.ReferenceAssemblyPathResolver" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Resolution\ReferenceAssemblyPathResolver.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveReferenceAssembly" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFallbackSearchPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.DotNet.PlatformAbstractions.Platform,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultReferenceAssembliesPath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.DotNet.PlatformAbstractions.Platform,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.ResolverUtils" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\Resolution\ResolverUtils.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryResolvePackagePath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyFile" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\ResourceAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Locale" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Locale" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeAssembly" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\RuntimeAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\RuntimeAssetGroup.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssetPaths" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeFallbacks" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\RuntimeFallbacks.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runtime" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fallbacks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fallbacks" signature="(System.Collections.Generic.IReadOnlyList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeLibrary" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\RuntimeLibrary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RuntimeAssemblyGroups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NativeLibraryGroups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResourceAssemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.TargetInfo" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\TargetInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Framework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeSignature" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPortable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="LoggerHelper" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\LoggerHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="InnerLogger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerLogger" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stopwatch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stopwatch" signature="(System.Diagnostics.Stopwatch)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,System.Diagnostics.Stopwatch)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(Xunit.Abstractions.ITestCase,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWithSource" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.Abstractions.ITestCase,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogErrorWithSource" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.Abstractions.ITestCase,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarningWithSource" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.TestMessageLevel,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Collections.Generic.CollectionExtensions" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\Microsoft.Extensions.DependencyModel\CollectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetDefaultGroup" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRuntimeGroup" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGroup" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultAssets" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRuntimeAssets" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssets" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Collections.Generic.EnumerableExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\EnumerableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ForEach" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit._DiagnosticMessage" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\_DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AssemblyHelper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\AssemblyHelper_Desktop.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="LoadAssembly" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveAndLoadAssembly" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.Type,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConsoleHelper" filename="C:\Dev\xunit\xunit\src\common\ConsoleHelper.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetForegroundColorANSI" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetForegroundColorConsole" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetColorANSI" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResetColorConsole" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonArray" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonValue[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBoolean" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonBoolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBuffer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="15">
              <lines />
            </method>
            <method name="ReadNextChar" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ReadNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadString" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="IsWhitespace" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Deserialize" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeInternal" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeArray" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeObject" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerException" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerResource" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="JSON_OpenString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JSON_InvalidEnd" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalCharacter" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalTrailingCharacterAfterLiteral" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnrecognizedLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_DuplicateObjectMemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidFloatNumberFormat" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_FloatNumberOverflow" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntax" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidTokenExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidUnicode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnfinishedJSON" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNull" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNumber" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Double" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raw" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonObject" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,Xunit.JsonValue&gt;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsJsonObject" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsBoolean" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsNullableBoolean" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsStringArray" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonString" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonValue" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.DiagnosticMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Sinks\DiagnosticMessageSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ForDiagnostics" signature="(LoggerHelper,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForInternalDiagnostics" signature="(LoggerHelper,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.RunSettings" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\RunSettings.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="CollectSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectSourceInformation" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DesignMode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DesignMode" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableAppDomain" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnostics" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnostics" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoAutoReporters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoAutoReporters" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReporterSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReporterSwitch" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFrameworkVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFrameworkVersion" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Parse" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatchingTargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.TestCaseFilter" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\TestCaseFilter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,LoggerHelper,System.String,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchTestCase" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyProvider" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseFilterExpression" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,LoggerHelper,System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseFilterExpression&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSupportedPropertyNames" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetTraits" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.TestPlatformContext" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\TestPlatformContext.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RequireSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequireSourceInformation" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequireXunitTestProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequireXunitTestProperty" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VisualStudioRunnerLogger" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Utility\VisualStudioRunnerLogger.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="LockObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(LoggerHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsDiscoverySink" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Sinks\VsDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TotalTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TotalTests" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,LoggerHelper,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Runner.VisualStudio.TestPlatformContext,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateVsTestCase" signature="(System.String,Xunit.TestCaseDescriptor,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Truncate" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finish" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAddTraitThunk" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="HandleCancellation" signature="(Xunit.MessageHandlerArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseDiscoveryMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseDiscoveryMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleDiscoveryCompleteMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IDiscoveryCompleteMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.IMessageSinkWithTypes.OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendExistingTestCases" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="GuidFromString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsExecutionDiscoverySink" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Sinks\VsExecutionDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finish" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsExecutionSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\Sinks\VsExecutionSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="(Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,LoggerHelper,System.Collections.Generic.Dictionary`2&lt;System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FindTestCase" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryAndReport" signature="(System.String,Xunit.Abstractions.ITestCase,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleCancellation" signature="(Xunit.MessageHandlerArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestClassCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteError" signature="(System.String,Xunit.Abstractions.IFailureInformation,System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeVsTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome,Xunit.Abstractions.ITestResultMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeVsTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome,Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeVsTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome,Xunit.Abstractions.ITestCase,System.String,System.Double,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAggregatedTestOutcome" signature="(Xunit.Abstractions.ITestCaseFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsTestRunner" filename="C:\Dev\xunit\xunit\src\xunit.runner.visualstudio\VsTestRunner.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestDiscoverer.DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PrintHeader" signature="(LoggerHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutor.RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutor.RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsAppX" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,System.Func`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;,System.Action`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoverTestsInSource" signature="(Xunit.XunitFrontController,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,System.Func`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;,System.Action`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;,System.String,System.Boolean,Xunit.TestAssemblyConfiguration)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConfigurationStreamForAssembly" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestProperty" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsXunitTestAssembly" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadConfiguration" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,System.Func`1&lt;System.Collections.Generic.List`1&lt;Xunit.Runner.VisualStudio.AssemblyRunInfo&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestsInAssembly" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,Xunit.IMessageSinkWithTypes,Xunit.Runner.VisualStudio.AssemblyRunInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestsInAssemblyAsync" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,Xunit.IMessageSinkWithTypes,Xunit.Runner.VisualStudio.AssemblyRunInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRunnerReporter" signature="(LoggerHelper,Xunit.Runner.VisualStudio.RunSettings,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAvailableRunnerReporters" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetVsTestCases" signature="(System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Runner.VisualStudio.VsExecutionDiscoverySink,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraitNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VSTestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.TestCaseDescriptor,Xunit.Abstractions.ITestCase,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
  </packages>
</coverage>